{"version":3,"file":"configES6-_CidsW4_.js","sources":["/Users/ahmad/Documents/Development/kfs_build/kfs-vite/src/libs/LoggerES6.js","/Users/ahmad/Documents/Development/kfs_build/kfs-vite/src/configES6.js"],"sourcesContent":["export class Logger {\n  constructor(on = true, trace = false) {\n    this.on = on;\n    this.trace = trace;\n    }\n\n    consoleDotLog(...parameters) {\n    if (!this.on) return;\n    console.log(...parameters);\n    this.trace && console.trace();\n    }\n\n    consoleDotError(...parameters) {\n    if (!this.on) return;\n    console.error(...parameters);\n    this.trace && console.trace();\n    }\n}\n","const config = {\n  corsProxy: 'http://localhost:9000/',\n  dir: '/',\n  logging: {\n    vfs: true,\n    kfs: true,\n    IDBFs: true,\n    gitWorker: true,\n    acl: true,\n    stats: true,\n    fsType: true,\n    fsManagerES6: false,\n    fsManagerGlobal: false,\n    swUtils: true,\n    memoryFS: true,\n    memoryBackendES6: false,\n    memoryBackendGlobal: false,\n    VFSutils: true,\n    gitNoteManager: true,\n    ServiceWorkerRegistration: true,\n    serviceWorker: true,\n    storageUtils: true,\n    supportChecker: true,\n    dotGit: true,\n    GitAuth: true,\n    serviceWorker: true,\n    WorkerPool: true,\n  },\n  versioning: {\n    strategy: 'immediate',\n    interval: 10,\n    number: 5\n  },\n  merging: {\n    strategy: 'immediate',\n    interval: 60,\n    onConflict: 'remote' // remote, local, combine\n  }\n};\n\n// Define group mappings\nconst loggingGroups = {\n  serviceWorker: [\n    'serviceWorker',\n    'ServiceWorkerRegistration',\n    'swUtils',\n  ],\n  kfs: [\n    'kfs',\n    'fsType',\n    'fsManagerES6',\n    'fsManagerGlobal',\n    'vfs',\n    'VFSutils',\n  ],\n  gitWorker: [\n    'gitWorker',\n    'dotGit',\n    'acl',\n    'stats',\n    'GitAuth',\n    'WorkerPool',\n    'gitNoteManager'\n  ],\n  storage: [\n    'memoryFS',\n    'memoryBackendES6',\n    'memoryBackendGlobal',\n    'IDBFs'\n  ]\n};\n\nasync function setConfig(newConfig) {\n  if (config === null) {\n    throw new Error('Configuration has already been set and cannot be modified.');\n  }\n  \n  for (const key in newConfig) {\n    if (key === 'logging') {\n      // Handle logging configuration\n      const loggingConfig = newConfig.logging;\n      \n      // First process group settings\n      for (const group in loggingGroups) {\n        if (loggingConfig.hasOwnProperty(group)) {\n          const value = loggingConfig[group];\n          // Set all subgroup values to the group value\n          loggingGroups[group].forEach(subKey => {\n            if (config.logging.hasOwnProperty(subKey)) {\n              config.logging[subKey] = value;\n            }\n          });\n        }\n      }\n      \n      // Then process individual settings (overriding group settings if needed)\n      for (const logKey in loggingConfig) {\n        if (config.logging.hasOwnProperty(logKey) && !loggingGroups.hasOwnProperty(logKey)) {\n          config.logging[logKey] = loggingConfig[logKey];\n        }\n      }\n    } else if (config.hasOwnProperty(key)) {\n      // Handle non-logging configuration\n      config[key] = newConfig[key];\n    } else {\n      throw new Error(`Invalid configuration key: ${key}`);\n    }\n  }\n}\n\nasync function getConfig() {\n  if (config === null) {\n    throw new Error('Configuration has not been set yet.');\n  }\n  return config;\n}\n\nexport { config, getConfig, setConfig };"],"names":["Logger","on","trace","parameters","config","loggingGroups","setConfig","newConfig","key","loggingConfig","group","value","subKey","logKey","getConfig"],"mappings":"AAAO,MAAMA,EAAO;AAAA,EAClB,YAAYC,IAAK,IAAMC,IAAQ,IAAO;AACpC,SAAK,KAAKD,GACV,KAAK,QAAQC;AAAA,EACjB;AAAA,EAEI,iBAAiBC,GAAY;AAC7B,IAAK,KAAK,OACV,QAAQ,IAAI,GAAGA,CAAU,GACzB,KAAK,SAAS,QAAQ,MAAO;AAAA,EACjC;AAAA,EAEI,mBAAmBA,GAAY;AAC/B,IAAK,KAAK,OACV,QAAQ,MAAM,GAAGA,CAAU,GAC3B,KAAK,SAAS,QAAQ,MAAO;AAAA,EACjC;AACA;ACjBK,MAACC,IAAS;AAAA,EACb,WAAW;AAAA,EACX,KAAK;AAAA,EACL,SAAS;AAAA,IACP,KAAK;AAAA,IACL,KAAK;AAAA,IACL,OAAO;AAAA,IACP,WAAW;AAAA,IACX,KAAK;AAAA,IACL,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,cAAc;AAAA,IACd,iBAAiB;AAAA,IACjB,SAAS;AAAA,IACT,UAAU;AAAA,IACV,kBAAkB;AAAA,IAClB,qBAAqB;AAAA,IACrB,UAAU;AAAA,IACV,gBAAgB;AAAA,IAChB,2BAA2B;AAAA,IAC3B,eAAe;AAAA,IACf,cAAc;AAAA,IACd,gBAAgB;AAAA,IAChB,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,eAAe;AAAA,IACf,YAAY;AAAA,EACb;AAAA,EACD,YAAY;AAAA,IACV,UAAU;AAAA,IACV,UAAU;AAAA,IACV,QAAQ;AAAA,EACT;AAAA,EACD,SAAS;AAAA,IACP,UAAU;AAAA,IACV,UAAU;AAAA,IACV,YAAY;AAAA;AAAA,EAChB;AACA,GAGMC,IAAgB;AAAA,EACpB,eAAe;AAAA,IACb;AAAA,IACA;AAAA,IACA;AAAA,EACD;AAAA,EACD,KAAK;AAAA,IACH;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACD;AAAA,EACD,WAAW;AAAA,IACT;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACD;AAAA,EACD,SAAS;AAAA,IACP;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ;AACA;AAEA,eAAeC,EAAUC,GAAW;AAClC,MAAIH,MAAW;AACb,UAAM,IAAI,MAAM,4DAA4D;AAG9E,aAAWI,KAAOD;AAChB,QAAIC,MAAQ,WAAW;AAErB,YAAMC,IAAgBF,EAAU;AAGhC,iBAAWG,KAASL;AAClB,YAAII,EAAc,eAAeC,CAAK,GAAG;AACvC,gBAAMC,IAAQF,EAAcC,CAAK;AAEjC,UAAAL,EAAcK,CAAK,EAAE,QAAQ,CAAAE,MAAU;AACrC,YAAIR,EAAO,QAAQ,eAAeQ,CAAM,MACtCR,EAAO,QAAQQ,CAAM,IAAID;AAAA,UAEvC,CAAW;AAAA,QACX;AAIM,iBAAWE,KAAUJ;AACnB,QAAIL,EAAO,QAAQ,eAAeS,CAAM,KAAK,CAACR,EAAc,eAAeQ,CAAM,MAC/ET,EAAO,QAAQS,CAAM,IAAIJ,EAAcI,CAAM;AAAA,IAGlD,WAAUT,EAAO,eAAeI,CAAG;AAElC,MAAAJ,EAAOI,CAAG,IAAID,EAAUC,CAAG;AAAA;AAE3B,YAAM,IAAI,MAAM,8BAA8BA,CAAG,EAAE;AAGzD;AAEA,eAAeM,IAAY;AACzB,MAAIV,MAAW;AACb,UAAM,IAAI,MAAM,qCAAqC;AAEvD,SAAOA;AACT;"}