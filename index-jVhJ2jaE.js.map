{"version":3,"file":"index-jVhJ2jaE.js","sources":["/Users/ahmad/Documents/Development/kfs_build/kfs-vite/node_modules/just-once/index.js","/Users/ahmad/Documents/Development/kfs_build/kfs-vite/node_modules/vite-plugin-node-polyfills/shims/buffer/dist/index.js","/Users/ahmad/Documents/Development/kfs_build/kfs-vite/node_modules/fast-text-encoding/text.min.js","/Users/ahmad/Documents/Development/kfs_build/kfs-vite/node_modules/isomorphic-textencoder/browser.js","/Users/ahmad/Documents/Development/kfs_build/kfs-vite/node_modules/just-debounce-it/index.js","/Users/ahmad/Documents/Development/kfs_build/kfs-vite/node_modules/@isomorphic-git/lightning-fs/src/path.js","/Users/ahmad/Documents/Development/kfs_build/kfs-vite/node_modules/@isomorphic-git/lightning-fs/src/errors.js","/Users/ahmad/Documents/Development/kfs_build/kfs-vite/node_modules/@isomorphic-git/lightning-fs/src/CacheFS.js","/Users/ahmad/Documents/Development/kfs_build/kfs-vite/node_modules/@isomorphic-git/idb-keyval/dist/idb-keyval.mjs","/Users/ahmad/Documents/Development/kfs_build/kfs-vite/node_modules/@isomorphic-git/lightning-fs/src/IdbBackend.js","/Users/ahmad/Documents/Development/kfs_build/kfs-vite/node_modules/@isomorphic-git/lightning-fs/src/HttpBackend.js","/Users/ahmad/Documents/Development/kfs_build/kfs-vite/node_modules/@isomorphic-git/lightning-fs/src/Mutex.js","/Users/ahmad/Documents/Development/kfs_build/kfs-vite/node_modules/@isomorphic-git/lightning-fs/src/Mutex2.js","/Users/ahmad/Documents/Development/kfs_build/kfs-vite/node_modules/@isomorphic-git/lightning-fs/src/DefaultBackend.js","/Users/ahmad/Documents/Development/kfs_build/kfs-vite/node_modules/@isomorphic-git/lightning-fs/src/Stat.js","/Users/ahmad/Documents/Development/kfs_build/kfs-vite/node_modules/@isomorphic-git/lightning-fs/src/PromisifiedFS.js","/Users/ahmad/Documents/Development/kfs_build/kfs-vite/node_modules/@isomorphic-git/lightning-fs/src/index.js"],"sourcesContent":["module.exports = once;\n\n/*\nlet i = 0;\nconst getFirst = once(() => ++i);\ngetFirst(); // 1\ngetFirst(); // 1\n*/\n\nfunction once(fn) {\n  var called, value;\n\n  if (typeof fn !== 'function') {\n    throw new Error('expected a function but got ' + fn);\n  }\n\n  return function wrap() {\n    if (called) {\n      return value;\n    }\n    called = true;\n    value = fn.apply(this, arguments);\n    return value;\n  };\n}\n","var buffer = {};\n\nvar base64Js = {};\n\nbase64Js.byteLength = byteLength;\nbase64Js.toByteArray = toByteArray;\nbase64Js.fromByteArray = fromByteArray;\n\nvar lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i];\n  revLookup[code.charCodeAt(i)] = i;\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62;\nrevLookup['_'.charCodeAt(0)] = 63;\n\nfunction getLens (b64) {\n  var len = b64.length;\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=');\n  if (validLen === -1) validLen = len;\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4);\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp;\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n\n  var curByte = 0;\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen;\n\n  var i;\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)];\n    arr[curByte++] = (tmp >> 16) & 0xFF;\n    arr[curByte++] = (tmp >> 8) & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4);\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2);\n    arr[curByte++] = (tmp >> 8) & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp;\n  var output = [];\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF);\n    output.push(tripletToBase64(tmp));\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)));\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    );\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    );\n  }\n\n  return parts.join('')\n}\n\nvar ieee754 = {};\n\n/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\n\nieee754.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = (nBytes * 8) - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? (nBytes - 1) : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n\n  i += d;\n\n  e = s & ((1 << (-nBits)) - 1);\n  s >>= (-nBits);\n  nBits += eLen;\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1);\n  e >>= (-nBits);\n  nBits += mLen;\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n};\n\nieee754.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = (nBytes * 8) - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0);\n  var i = isLE ? 0 : (nBytes - 1);\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\n\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128;\n};\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n(function (exports) {\n\n\tconst base64 = base64Js;\n\tconst ieee754$1 = ieee754;\n\tconst customInspectSymbol =\n\t  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n\t    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n\t    : null;\n\n\texports.Buffer = Buffer;\n\texports.SlowBuffer = SlowBuffer;\n\texports.INSPECT_MAX_BYTES = 50;\n\n\tconst K_MAX_LENGTH = 0x7fffffff;\n\texports.kMaxLength = K_MAX_LENGTH;\n\tconst { Uint8Array: GlobalUint8Array, ArrayBuffer: GlobalArrayBuffer, SharedArrayBuffer: GlobalSharedArrayBuffer } = globalThis;\n\n\t/**\n\t * If `Buffer.TYPED_ARRAY_SUPPORT`:\n\t *   === true    Use Uint8Array implementation (fastest)\n\t *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n\t *               implementation (most compatible, even IE6)\n\t *\n\t * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n\t * Opera 11.6+, iOS 4.2+.\n\t *\n\t * We report that the browser does not support typed arrays if the are not subclassable\n\t * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n\t * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n\t * for __proto__ and has a buggy typed array implementation.\n\t */\n\tBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport();\n\n\tif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n\t    typeof console.error === 'function') {\n\t  console.error(\n\t    'This browser lacks typed array (Uint8Array) support which is required by ' +\n\t    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n\t  );\n\t}\n\n\tfunction typedArraySupport () {\n\t  // Can typed array instances can be augmented?\n\t  try {\n\t    const arr = new GlobalUint8Array(1);\n\t    const proto = { foo: function () { return 42 } };\n\t    Object.setPrototypeOf(proto, GlobalUint8Array.prototype);\n\t    Object.setPrototypeOf(arr, proto);\n\t    return arr.foo() === 42\n\t  } catch (e) {\n\t    return false\n\t  }\n\t}\n\n\tObject.defineProperty(Buffer.prototype, 'parent', {\n\t  enumerable: true,\n\t  get: function () {\n\t    if (!Buffer.isBuffer(this)) return undefined\n\t    return this.buffer\n\t  }\n\t});\n\n\tObject.defineProperty(Buffer.prototype, 'offset', {\n\t  enumerable: true,\n\t  get: function () {\n\t    if (!Buffer.isBuffer(this)) return undefined\n\t    return this.byteOffset\n\t  }\n\t});\n\n\tfunction createBuffer (length) {\n\t  if (length > K_MAX_LENGTH) {\n\t    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n\t  }\n\t  // Return an augmented `Uint8Array` instance\n\t  const buf = new GlobalUint8Array(length);\n\t  Object.setPrototypeOf(buf, Buffer.prototype);\n\t  return buf\n\t}\n\n\t/**\n\t * The Buffer constructor returns instances of `Uint8Array` that have their\n\t * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n\t * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n\t * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n\t * returns a single octet.\n\t *\n\t * The `Uint8Array` prototype remains unmodified.\n\t */\n\n\tfunction Buffer (arg, encodingOrOffset, length) {\n\t  // Common case.\n\t  if (typeof arg === 'number') {\n\t    if (typeof encodingOrOffset === 'string') {\n\t      throw new TypeError(\n\t        'The \"string\" argument must be of type string. Received type number'\n\t      )\n\t    }\n\t    return allocUnsafe(arg)\n\t  }\n\t  return from(arg, encodingOrOffset, length)\n\t}\n\n\tBuffer.poolSize = 8192; // not used by this implementation\n\n\tfunction from (value, encodingOrOffset, length) {\n\t  if (typeof value === 'string') {\n\t    return fromString(value, encodingOrOffset)\n\t  }\n\n\t  if (GlobalArrayBuffer.isView(value)) {\n\t    return fromArrayView(value)\n\t  }\n\n\t  if (value == null) {\n\t    throw new TypeError(\n\t      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n\t      'or Array-like Object. Received type ' + (typeof value)\n\t    )\n\t  }\n\n\t  if (isInstance(value, GlobalArrayBuffer) ||\n\t      (value && isInstance(value.buffer, GlobalArrayBuffer))) {\n\t    return fromArrayBuffer(value, encodingOrOffset, length)\n\t  }\n\n\t  if (typeof GlobalSharedArrayBuffer !== 'undefined' &&\n\t      (isInstance(value, GlobalSharedArrayBuffer) ||\n\t      (value && isInstance(value.buffer, GlobalSharedArrayBuffer)))) {\n\t    return fromArrayBuffer(value, encodingOrOffset, length)\n\t  }\n\n\t  if (typeof value === 'number') {\n\t    throw new TypeError(\n\t      'The \"value\" argument must not be of type number. Received type number'\n\t    )\n\t  }\n\n\t  const valueOf = value.valueOf && value.valueOf();\n\t  if (valueOf != null && valueOf !== value) {\n\t    return Buffer.from(valueOf, encodingOrOffset, length)\n\t  }\n\n\t  const b = fromObject(value);\n\t  if (b) return b\n\n\t  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n\t      typeof value[Symbol.toPrimitive] === 'function') {\n\t    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n\t  }\n\n\t  throw new TypeError(\n\t    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n\t    'or Array-like Object. Received type ' + (typeof value)\n\t  )\n\t}\n\n\t/**\n\t * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n\t * if value is a number.\n\t * Buffer.from(str[, encoding])\n\t * Buffer.from(array)\n\t * Buffer.from(buffer)\n\t * Buffer.from(arrayBuffer[, byteOffset[, length]])\n\t **/\n\tBuffer.from = function (value, encodingOrOffset, length) {\n\t  return from(value, encodingOrOffset, length)\n\t};\n\n\t// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n\t// https://github.com/feross/buffer/pull/148\n\tObject.setPrototypeOf(Buffer.prototype, GlobalUint8Array.prototype);\n\tObject.setPrototypeOf(Buffer, GlobalUint8Array);\n\n\tfunction assertSize (size) {\n\t  if (typeof size !== 'number') {\n\t    throw new TypeError('\"size\" argument must be of type number')\n\t  } else if (size < 0) {\n\t    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n\t  }\n\t}\n\n\tfunction alloc (size, fill, encoding) {\n\t  assertSize(size);\n\t  if (size <= 0) {\n\t    return createBuffer(size)\n\t  }\n\t  if (fill !== undefined) {\n\t    // Only pay attention to encoding if it's a string. This\n\t    // prevents accidentally sending in a number that would\n\t    // be interpreted as a start offset.\n\t    return typeof encoding === 'string'\n\t      ? createBuffer(size).fill(fill, encoding)\n\t      : createBuffer(size).fill(fill)\n\t  }\n\t  return createBuffer(size)\n\t}\n\n\t/**\n\t * Creates a new filled Buffer instance.\n\t * alloc(size[, fill[, encoding]])\n\t **/\n\tBuffer.alloc = function (size, fill, encoding) {\n\t  return alloc(size, fill, encoding)\n\t};\n\n\tfunction allocUnsafe (size) {\n\t  assertSize(size);\n\t  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n\t}\n\n\t/**\n\t * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n\t * */\n\tBuffer.allocUnsafe = function (size) {\n\t  return allocUnsafe(size)\n\t};\n\t/**\n\t * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n\t */\n\tBuffer.allocUnsafeSlow = function (size) {\n\t  return allocUnsafe(size)\n\t};\n\n\tfunction fromString (string, encoding) {\n\t  if (typeof encoding !== 'string' || encoding === '') {\n\t    encoding = 'utf8';\n\t  }\n\n\t  if (!Buffer.isEncoding(encoding)) {\n\t    throw new TypeError('Unknown encoding: ' + encoding)\n\t  }\n\n\t  const length = byteLength(string, encoding) | 0;\n\t  let buf = createBuffer(length);\n\n\t  const actual = buf.write(string, encoding);\n\n\t  if (actual !== length) {\n\t    // Writing a hex string, for example, that contains invalid characters will\n\t    // cause everything after the first invalid character to be ignored. (e.g.\n\t    // 'abxxcd' will be treated as 'ab')\n\t    buf = buf.slice(0, actual);\n\t  }\n\n\t  return buf\n\t}\n\n\tfunction fromArrayLike (array) {\n\t  const length = array.length < 0 ? 0 : checked(array.length) | 0;\n\t  const buf = createBuffer(length);\n\t  for (let i = 0; i < length; i += 1) {\n\t    buf[i] = array[i] & 255;\n\t  }\n\t  return buf\n\t}\n\n\tfunction fromArrayView (arrayView) {\n\t  if (isInstance(arrayView, GlobalUint8Array)) {\n\t    const copy = new GlobalUint8Array(arrayView);\n\t    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n\t  }\n\t  return fromArrayLike(arrayView)\n\t}\n\n\tfunction fromArrayBuffer (array, byteOffset, length) {\n\t  if (byteOffset < 0 || array.byteLength < byteOffset) {\n\t    throw new RangeError('\"offset\" is outside of buffer bounds')\n\t  }\n\n\t  if (array.byteLength < byteOffset + (length || 0)) {\n\t    throw new RangeError('\"length\" is outside of buffer bounds')\n\t  }\n\n\t  let buf;\n\t  if (byteOffset === undefined && length === undefined) {\n\t    buf = new GlobalUint8Array(array);\n\t  } else if (length === undefined) {\n\t    buf = new GlobalUint8Array(array, byteOffset);\n\t  } else {\n\t    buf = new GlobalUint8Array(array, byteOffset, length);\n\t  }\n\n\t  // Return an augmented `Uint8Array` instance\n\t  Object.setPrototypeOf(buf, Buffer.prototype);\n\n\t  return buf\n\t}\n\n\tfunction fromObject (obj) {\n\t  if (Buffer.isBuffer(obj)) {\n\t    const len = checked(obj.length) | 0;\n\t    const buf = createBuffer(len);\n\n\t    if (buf.length === 0) {\n\t      return buf\n\t    }\n\n\t    obj.copy(buf, 0, 0, len);\n\t    return buf\n\t  }\n\n\t  if (obj.length !== undefined) {\n\t    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n\t      return createBuffer(0)\n\t    }\n\t    return fromArrayLike(obj)\n\t  }\n\n\t  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n\t    return fromArrayLike(obj.data)\n\t  }\n\t}\n\n\tfunction checked (length) {\n\t  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n\t  // length is NaN (which is otherwise coerced to zero.)\n\t  if (length >= K_MAX_LENGTH) {\n\t    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n\t                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n\t  }\n\t  return length | 0\n\t}\n\n\tfunction SlowBuffer (length) {\n\t  if (+length != length) { // eslint-disable-line eqeqeq\n\t    length = 0;\n\t  }\n\t  return Buffer.alloc(+length)\n\t}\n\n\tBuffer.isBuffer = function isBuffer (b) {\n\t  return b != null && b._isBuffer === true &&\n\t    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n\t};\n\n\tBuffer.compare = function compare (a, b) {\n\t  if (isInstance(a, GlobalUint8Array)) a = Buffer.from(a, a.offset, a.byteLength);\n\t  if (isInstance(b, GlobalUint8Array)) b = Buffer.from(b, b.offset, b.byteLength);\n\t  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n\t    throw new TypeError(\n\t      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n\t    )\n\t  }\n\n\t  if (a === b) return 0\n\n\t  let x = a.length;\n\t  let y = b.length;\n\n\t  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n\t    if (a[i] !== b[i]) {\n\t      x = a[i];\n\t      y = b[i];\n\t      break\n\t    }\n\t  }\n\n\t  if (x < y) return -1\n\t  if (y < x) return 1\n\t  return 0\n\t};\n\n\tBuffer.isEncoding = function isEncoding (encoding) {\n\t  switch (String(encoding).toLowerCase()) {\n\t    case 'hex':\n\t    case 'utf8':\n\t    case 'utf-8':\n\t    case 'ascii':\n\t    case 'latin1':\n\t    case 'binary':\n\t    case 'base64':\n\t    case 'ucs2':\n\t    case 'ucs-2':\n\t    case 'utf16le':\n\t    case 'utf-16le':\n\t      return true\n\t    default:\n\t      return false\n\t  }\n\t};\n\n\tBuffer.concat = function concat (list, length) {\n\t  if (!Array.isArray(list)) {\n\t    throw new TypeError('\"list\" argument must be an Array of Buffers')\n\t  }\n\n\t  if (list.length === 0) {\n\t    return Buffer.alloc(0)\n\t  }\n\n\t  let i;\n\t  if (length === undefined) {\n\t    length = 0;\n\t    for (i = 0; i < list.length; ++i) {\n\t      length += list[i].length;\n\t    }\n\t  }\n\n\t  const buffer = Buffer.allocUnsafe(length);\n\t  let pos = 0;\n\t  for (i = 0; i < list.length; ++i) {\n\t    let buf = list[i];\n\t    if (isInstance(buf, GlobalUint8Array)) {\n\t      if (pos + buf.length > buffer.length) {\n\t        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf);\n\t        buf.copy(buffer, pos);\n\t      } else {\n\t        GlobalUint8Array.prototype.set.call(\n\t          buffer,\n\t          buf,\n\t          pos\n\t        );\n\t      }\n\t    } else if (!Buffer.isBuffer(buf)) {\n\t      throw new TypeError('\"list\" argument must be an Array of Buffers')\n\t    } else {\n\t      buf.copy(buffer, pos);\n\t    }\n\t    pos += buf.length;\n\t  }\n\t  return buffer\n\t};\n\n\tfunction byteLength (string, encoding) {\n\t  if (Buffer.isBuffer(string)) {\n\t    return string.length\n\t  }\n\t  if (GlobalArrayBuffer.isView(string) || isInstance(string, GlobalArrayBuffer)) {\n\t    return string.byteLength\n\t  }\n\t  if (typeof string !== 'string') {\n\t    throw new TypeError(\n\t      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n\t      'Received type ' + typeof string\n\t    )\n\t  }\n\n\t  const len = string.length;\n\t  const mustMatch = (arguments.length > 2 && arguments[2] === true);\n\t  if (!mustMatch && len === 0) return 0\n\n\t  // Use a for loop to avoid recursion\n\t  let loweredCase = false;\n\t  for (;;) {\n\t    switch (encoding) {\n\t      case 'ascii':\n\t      case 'latin1':\n\t      case 'binary':\n\t        return len\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8ToBytes(string).length\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return len * 2\n\t      case 'hex':\n\t        return len >>> 1\n\t      case 'base64':\n\t        return base64ToBytes(string).length\n\t      default:\n\t        if (loweredCase) {\n\t          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n\t        }\n\t        encoding = ('' + encoding).toLowerCase();\n\t        loweredCase = true;\n\t    }\n\t  }\n\t}\n\tBuffer.byteLength = byteLength;\n\n\tfunction slowToString (encoding, start, end) {\n\t  let loweredCase = false;\n\n\t  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n\t  // property of a typed array.\n\n\t  // This behaves neither like String nor Uint8Array in that we set start/end\n\t  // to their upper/lower bounds if the value passed is out of range.\n\t  // undefined is handled specially as per ECMA-262 6th Edition,\n\t  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\t  if (start === undefined || start < 0) {\n\t    start = 0;\n\t  }\n\t  // Return early if start > this.length. Done here to prevent potential uint32\n\t  // coercion fail below.\n\t  if (start > this.length) {\n\t    return ''\n\t  }\n\n\t  if (end === undefined || end > this.length) {\n\t    end = this.length;\n\t  }\n\n\t  if (end <= 0) {\n\t    return ''\n\t  }\n\n\t  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n\t  end >>>= 0;\n\t  start >>>= 0;\n\n\t  if (end <= start) {\n\t    return ''\n\t  }\n\n\t  if (!encoding) encoding = 'utf8';\n\n\t  while (true) {\n\t    switch (encoding) {\n\t      case 'hex':\n\t        return hexSlice(this, start, end)\n\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8Slice(this, start, end)\n\n\t      case 'ascii':\n\t        return asciiSlice(this, start, end)\n\n\t      case 'latin1':\n\t      case 'binary':\n\t        return latin1Slice(this, start, end)\n\n\t      case 'base64':\n\t        return base64Slice(this, start, end)\n\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return utf16leSlice(this, start, end)\n\n\t      default:\n\t        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n\t        encoding = (encoding + '').toLowerCase();\n\t        loweredCase = true;\n\t    }\n\t  }\n\t}\n\n\t// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n\t// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n\t// reliably in a browserify context because there could be multiple different\n\t// copies of the 'buffer' package in use. This method works even for Buffer\n\t// instances that were created from another copy of the `buffer` package.\n\t// See: https://github.com/feross/buffer/issues/154\n\tBuffer.prototype._isBuffer = true;\n\n\tfunction swap (b, n, m) {\n\t  const i = b[n];\n\t  b[n] = b[m];\n\t  b[m] = i;\n\t}\n\n\tBuffer.prototype.swap16 = function swap16 () {\n\t  const len = this.length;\n\t  if (len % 2 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 16-bits')\n\t  }\n\t  for (let i = 0; i < len; i += 2) {\n\t    swap(this, i, i + 1);\n\t  }\n\t  return this\n\t};\n\n\tBuffer.prototype.swap32 = function swap32 () {\n\t  const len = this.length;\n\t  if (len % 4 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 32-bits')\n\t  }\n\t  for (let i = 0; i < len; i += 4) {\n\t    swap(this, i, i + 3);\n\t    swap(this, i + 1, i + 2);\n\t  }\n\t  return this\n\t};\n\n\tBuffer.prototype.swap64 = function swap64 () {\n\t  const len = this.length;\n\t  if (len % 8 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 64-bits')\n\t  }\n\t  for (let i = 0; i < len; i += 8) {\n\t    swap(this, i, i + 7);\n\t    swap(this, i + 1, i + 6);\n\t    swap(this, i + 2, i + 5);\n\t    swap(this, i + 3, i + 4);\n\t  }\n\t  return this\n\t};\n\n\tBuffer.prototype.toString = function toString () {\n\t  const length = this.length;\n\t  if (length === 0) return ''\n\t  if (arguments.length === 0) return utf8Slice(this, 0, length)\n\t  return slowToString.apply(this, arguments)\n\t};\n\n\tBuffer.prototype.toLocaleString = Buffer.prototype.toString;\n\n\tBuffer.prototype.equals = function equals (b) {\n\t  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n\t  if (this === b) return true\n\t  return Buffer.compare(this, b) === 0\n\t};\n\n\tBuffer.prototype.inspect = function inspect () {\n\t  let str = '';\n\t  const max = exports.INSPECT_MAX_BYTES;\n\t  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim();\n\t  if (this.length > max) str += ' ... ';\n\t  return '<Buffer ' + str + '>'\n\t};\n\tif (customInspectSymbol) {\n\t  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect;\n\t}\n\n\tBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n\t  if (isInstance(target, GlobalUint8Array)) {\n\t    target = Buffer.from(target, target.offset, target.byteLength);\n\t  }\n\t  if (!Buffer.isBuffer(target)) {\n\t    throw new TypeError(\n\t      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n\t      'Received type ' + (typeof target)\n\t    )\n\t  }\n\n\t  if (start === undefined) {\n\t    start = 0;\n\t  }\n\t  if (end === undefined) {\n\t    end = target ? target.length : 0;\n\t  }\n\t  if (thisStart === undefined) {\n\t    thisStart = 0;\n\t  }\n\t  if (thisEnd === undefined) {\n\t    thisEnd = this.length;\n\t  }\n\n\t  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n\t    throw new RangeError('out of range index')\n\t  }\n\n\t  if (thisStart >= thisEnd && start >= end) {\n\t    return 0\n\t  }\n\t  if (thisStart >= thisEnd) {\n\t    return -1\n\t  }\n\t  if (start >= end) {\n\t    return 1\n\t  }\n\n\t  start >>>= 0;\n\t  end >>>= 0;\n\t  thisStart >>>= 0;\n\t  thisEnd >>>= 0;\n\n\t  if (this === target) return 0\n\n\t  let x = thisEnd - thisStart;\n\t  let y = end - start;\n\t  const len = Math.min(x, y);\n\n\t  const thisCopy = this.slice(thisStart, thisEnd);\n\t  const targetCopy = target.slice(start, end);\n\n\t  for (let i = 0; i < len; ++i) {\n\t    if (thisCopy[i] !== targetCopy[i]) {\n\t      x = thisCopy[i];\n\t      y = targetCopy[i];\n\t      break\n\t    }\n\t  }\n\n\t  if (x < y) return -1\n\t  if (y < x) return 1\n\t  return 0\n\t};\n\n\t// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n\t// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n\t//\n\t// Arguments:\n\t// - buffer - a Buffer to search\n\t// - val - a string, Buffer, or number\n\t// - byteOffset - an index into `buffer`; will be clamped to an int32\n\t// - encoding - an optional encoding, relevant is val is a string\n\t// - dir - true for indexOf, false for lastIndexOf\n\tfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n\t  // Empty buffer means no match\n\t  if (buffer.length === 0) return -1\n\n\t  // Normalize byteOffset\n\t  if (typeof byteOffset === 'string') {\n\t    encoding = byteOffset;\n\t    byteOffset = 0;\n\t  } else if (byteOffset > 0x7fffffff) {\n\t    byteOffset = 0x7fffffff;\n\t  } else if (byteOffset < -0x80000000) {\n\t    byteOffset = -0x80000000;\n\t  }\n\t  byteOffset = +byteOffset; // Coerce to Number.\n\t  if (numberIsNaN(byteOffset)) {\n\t    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n\t    byteOffset = dir ? 0 : (buffer.length - 1);\n\t  }\n\n\t  // Normalize byteOffset: negative offsets start from the end of the buffer\n\t  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n\t  if (byteOffset >= buffer.length) {\n\t    if (dir) return -1\n\t    else byteOffset = buffer.length - 1;\n\t  } else if (byteOffset < 0) {\n\t    if (dir) byteOffset = 0;\n\t    else return -1\n\t  }\n\n\t  // Normalize val\n\t  if (typeof val === 'string') {\n\t    val = Buffer.from(val, encoding);\n\t  }\n\n\t  // Finally, search either indexOf (if dir is true) or lastIndexOf\n\t  if (Buffer.isBuffer(val)) {\n\t    // Special case: looking for empty string/buffer always fails\n\t    if (val.length === 0) {\n\t      return -1\n\t    }\n\t    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n\t  } else if (typeof val === 'number') {\n\t    val = val & 0xFF; // Search for a byte value [0-255]\n\t    if (typeof GlobalUint8Array.prototype.indexOf === 'function') {\n\t      if (dir) {\n\t        return GlobalUint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n\t      } else {\n\t        return GlobalUint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n\t      }\n\t    }\n\t    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n\t  }\n\n\t  throw new TypeError('val must be string, number or Buffer')\n\t}\n\n\tfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n\t  let indexSize = 1;\n\t  let arrLength = arr.length;\n\t  let valLength = val.length;\n\n\t  if (encoding !== undefined) {\n\t    encoding = String(encoding).toLowerCase();\n\t    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n\t        encoding === 'utf16le' || encoding === 'utf-16le') {\n\t      if (arr.length < 2 || val.length < 2) {\n\t        return -1\n\t      }\n\t      indexSize = 2;\n\t      arrLength /= 2;\n\t      valLength /= 2;\n\t      byteOffset /= 2;\n\t    }\n\t  }\n\n\t  function read (buf, i) {\n\t    if (indexSize === 1) {\n\t      return buf[i]\n\t    } else {\n\t      return buf.readUInt16BE(i * indexSize)\n\t    }\n\t  }\n\n\t  let i;\n\t  if (dir) {\n\t    let foundIndex = -1;\n\t    for (i = byteOffset; i < arrLength; i++) {\n\t      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n\t        if (foundIndex === -1) foundIndex = i;\n\t        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n\t      } else {\n\t        if (foundIndex !== -1) i -= i - foundIndex;\n\t        foundIndex = -1;\n\t      }\n\t    }\n\t  } else {\n\t    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n\t    for (i = byteOffset; i >= 0; i--) {\n\t      let found = true;\n\t      for (let j = 0; j < valLength; j++) {\n\t        if (read(arr, i + j) !== read(val, j)) {\n\t          found = false;\n\t          break\n\t        }\n\t      }\n\t      if (found) return i\n\t    }\n\t  }\n\n\t  return -1\n\t}\n\n\tBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n\t  return this.indexOf(val, byteOffset, encoding) !== -1\n\t};\n\n\tBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n\t  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n\t};\n\n\tBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n\t  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n\t};\n\n\tfunction hexWrite (buf, string, offset, length) {\n\t  offset = Number(offset) || 0;\n\t  const remaining = buf.length - offset;\n\t  if (!length) {\n\t    length = remaining;\n\t  } else {\n\t    length = Number(length);\n\t    if (length > remaining) {\n\t      length = remaining;\n\t    }\n\t  }\n\n\t  const strLen = string.length;\n\n\t  if (length > strLen / 2) {\n\t    length = strLen / 2;\n\t  }\n\t  let i;\n\t  for (i = 0; i < length; ++i) {\n\t    const parsed = parseInt(string.substr(i * 2, 2), 16);\n\t    if (numberIsNaN(parsed)) return i\n\t    buf[offset + i] = parsed;\n\t  }\n\t  return i\n\t}\n\n\tfunction utf8Write (buf, string, offset, length) {\n\t  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n\t}\n\n\tfunction asciiWrite (buf, string, offset, length) {\n\t  return blitBuffer(asciiToBytes(string), buf, offset, length)\n\t}\n\n\tfunction base64Write (buf, string, offset, length) {\n\t  return blitBuffer(base64ToBytes(string), buf, offset, length)\n\t}\n\n\tfunction ucs2Write (buf, string, offset, length) {\n\t  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n\t}\n\n\tBuffer.prototype.write = function write (string, offset, length, encoding) {\n\t  // Buffer#write(string)\n\t  if (offset === undefined) {\n\t    encoding = 'utf8';\n\t    length = this.length;\n\t    offset = 0;\n\t  // Buffer#write(string, encoding)\n\t  } else if (length === undefined && typeof offset === 'string') {\n\t    encoding = offset;\n\t    length = this.length;\n\t    offset = 0;\n\t  // Buffer#write(string, offset[, length][, encoding])\n\t  } else if (isFinite(offset)) {\n\t    offset = offset >>> 0;\n\t    if (isFinite(length)) {\n\t      length = length >>> 0;\n\t      if (encoding === undefined) encoding = 'utf8';\n\t    } else {\n\t      encoding = length;\n\t      length = undefined;\n\t    }\n\t  } else {\n\t    throw new Error(\n\t      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n\t    )\n\t  }\n\n\t  const remaining = this.length - offset;\n\t  if (length === undefined || length > remaining) length = remaining;\n\n\t  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n\t    throw new RangeError('Attempt to write outside buffer bounds')\n\t  }\n\n\t  if (!encoding) encoding = 'utf8';\n\n\t  let loweredCase = false;\n\t  for (;;) {\n\t    switch (encoding) {\n\t      case 'hex':\n\t        return hexWrite(this, string, offset, length)\n\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8Write(this, string, offset, length)\n\n\t      case 'ascii':\n\t      case 'latin1':\n\t      case 'binary':\n\t        return asciiWrite(this, string, offset, length)\n\n\t      case 'base64':\n\t        // Warning: maxLength not taken into account in base64Write\n\t        return base64Write(this, string, offset, length)\n\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return ucs2Write(this, string, offset, length)\n\n\t      default:\n\t        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n\t        encoding = ('' + encoding).toLowerCase();\n\t        loweredCase = true;\n\t    }\n\t  }\n\t};\n\n\tBuffer.prototype.toJSON = function toJSON () {\n\t  return {\n\t    type: 'Buffer',\n\t    data: Array.prototype.slice.call(this._arr || this, 0)\n\t  }\n\t};\n\n\tfunction base64Slice (buf, start, end) {\n\t  if (start === 0 && end === buf.length) {\n\t    return base64.fromByteArray(buf)\n\t  } else {\n\t    return base64.fromByteArray(buf.slice(start, end))\n\t  }\n\t}\n\n\tfunction utf8Slice (buf, start, end) {\n\t  end = Math.min(buf.length, end);\n\t  const res = [];\n\n\t  let i = start;\n\t  while (i < end) {\n\t    const firstByte = buf[i];\n\t    let codePoint = null;\n\t    let bytesPerSequence = (firstByte > 0xEF)\n\t      ? 4\n\t      : (firstByte > 0xDF)\n\t          ? 3\n\t          : (firstByte > 0xBF)\n\t              ? 2\n\t              : 1;\n\n\t    if (i + bytesPerSequence <= end) {\n\t      let secondByte, thirdByte, fourthByte, tempCodePoint;\n\n\t      switch (bytesPerSequence) {\n\t        case 1:\n\t          if (firstByte < 0x80) {\n\t            codePoint = firstByte;\n\t          }\n\t          break\n\t        case 2:\n\t          secondByte = buf[i + 1];\n\t          if ((secondByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F);\n\t            if (tempCodePoint > 0x7F) {\n\t              codePoint = tempCodePoint;\n\t            }\n\t          }\n\t          break\n\t        case 3:\n\t          secondByte = buf[i + 1];\n\t          thirdByte = buf[i + 2];\n\t          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F);\n\t            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n\t              codePoint = tempCodePoint;\n\t            }\n\t          }\n\t          break\n\t        case 4:\n\t          secondByte = buf[i + 1];\n\t          thirdByte = buf[i + 2];\n\t          fourthByte = buf[i + 3];\n\t          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F);\n\t            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n\t              codePoint = tempCodePoint;\n\t            }\n\t          }\n\t      }\n\t    }\n\n\t    if (codePoint === null) {\n\t      // we did not generate a valid codePoint so insert a\n\t      // replacement char (U+FFFD) and advance only 1 byte\n\t      codePoint = 0xFFFD;\n\t      bytesPerSequence = 1;\n\t    } else if (codePoint > 0xFFFF) {\n\t      // encode to utf16 (surrogate pair dance)\n\t      codePoint -= 0x10000;\n\t      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n\t      codePoint = 0xDC00 | codePoint & 0x3FF;\n\t    }\n\n\t    res.push(codePoint);\n\t    i += bytesPerSequence;\n\t  }\n\n\t  return decodeCodePointsArray(res)\n\t}\n\n\t// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n\t// the lowest limit is Chrome, with 0x10000 args.\n\t// We go 1 magnitude less, for safety\n\tconst MAX_ARGUMENTS_LENGTH = 0x1000;\n\n\tfunction decodeCodePointsArray (codePoints) {\n\t  const len = codePoints.length;\n\t  if (len <= MAX_ARGUMENTS_LENGTH) {\n\t    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n\t  }\n\n\t  // Decode in chunks to avoid \"call stack size exceeded\".\n\t  let res = '';\n\t  let i = 0;\n\t  while (i < len) {\n\t    res += String.fromCharCode.apply(\n\t      String,\n\t      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n\t    );\n\t  }\n\t  return res\n\t}\n\n\tfunction asciiSlice (buf, start, end) {\n\t  let ret = '';\n\t  end = Math.min(buf.length, end);\n\n\t  for (let i = start; i < end; ++i) {\n\t    ret += String.fromCharCode(buf[i] & 0x7F);\n\t  }\n\t  return ret\n\t}\n\n\tfunction latin1Slice (buf, start, end) {\n\t  let ret = '';\n\t  end = Math.min(buf.length, end);\n\n\t  for (let i = start; i < end; ++i) {\n\t    ret += String.fromCharCode(buf[i]);\n\t  }\n\t  return ret\n\t}\n\n\tfunction hexSlice (buf, start, end) {\n\t  const len = buf.length;\n\n\t  if (!start || start < 0) start = 0;\n\t  if (!end || end < 0 || end > len) end = len;\n\n\t  let out = '';\n\t  for (let i = start; i < end; ++i) {\n\t    out += hexSliceLookupTable[buf[i]];\n\t  }\n\t  return out\n\t}\n\n\tfunction utf16leSlice (buf, start, end) {\n\t  const bytes = buf.slice(start, end);\n\t  let res = '';\n\t  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n\t  for (let i = 0; i < bytes.length - 1; i += 2) {\n\t    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256));\n\t  }\n\t  return res\n\t}\n\n\tBuffer.prototype.slice = function slice (start, end) {\n\t  const len = this.length;\n\t  start = ~~start;\n\t  end = end === undefined ? len : ~~end;\n\n\t  if (start < 0) {\n\t    start += len;\n\t    if (start < 0) start = 0;\n\t  } else if (start > len) {\n\t    start = len;\n\t  }\n\n\t  if (end < 0) {\n\t    end += len;\n\t    if (end < 0) end = 0;\n\t  } else if (end > len) {\n\t    end = len;\n\t  }\n\n\t  if (end < start) end = start;\n\n\t  const newBuf = this.subarray(start, end);\n\t  // Return an augmented `Uint8Array` instance\n\t  Object.setPrototypeOf(newBuf, Buffer.prototype);\n\n\t  return newBuf\n\t};\n\n\t/*\n\t * Need to make sure that buffer isn't trying to write out of bounds.\n\t */\n\tfunction checkOffset (offset, ext, length) {\n\t  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n\t  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n\t}\n\n\tBuffer.prototype.readUintLE =\n\tBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n\t  offset = offset >>> 0;\n\t  byteLength = byteLength >>> 0;\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n\t  let val = this[offset];\n\t  let mul = 1;\n\t  let i = 0;\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    val += this[offset + i] * mul;\n\t  }\n\n\t  return val\n\t};\n\n\tBuffer.prototype.readUintBE =\n\tBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n\t  offset = offset >>> 0;\n\t  byteLength = byteLength >>> 0;\n\t  if (!noAssert) {\n\t    checkOffset(offset, byteLength, this.length);\n\t  }\n\n\t  let val = this[offset + --byteLength];\n\t  let mul = 1;\n\t  while (byteLength > 0 && (mul *= 0x100)) {\n\t    val += this[offset + --byteLength] * mul;\n\t  }\n\n\t  return val\n\t};\n\n\tBuffer.prototype.readUint8 =\n\tBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n\t  offset = offset >>> 0;\n\t  if (!noAssert) checkOffset(offset, 1, this.length);\n\t  return this[offset]\n\t};\n\n\tBuffer.prototype.readUint16LE =\n\tBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n\t  offset = offset >>> 0;\n\t  if (!noAssert) checkOffset(offset, 2, this.length);\n\t  return this[offset] | (this[offset + 1] << 8)\n\t};\n\n\tBuffer.prototype.readUint16BE =\n\tBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n\t  offset = offset >>> 0;\n\t  if (!noAssert) checkOffset(offset, 2, this.length);\n\t  return (this[offset] << 8) | this[offset + 1]\n\t};\n\n\tBuffer.prototype.readUint32LE =\n\tBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n\t  offset = offset >>> 0;\n\t  if (!noAssert) checkOffset(offset, 4, this.length);\n\n\t  return ((this[offset]) |\n\t      (this[offset + 1] << 8) |\n\t      (this[offset + 2] << 16)) +\n\t      (this[offset + 3] * 0x1000000)\n\t};\n\n\tBuffer.prototype.readUint32BE =\n\tBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n\t  offset = offset >>> 0;\n\t  if (!noAssert) checkOffset(offset, 4, this.length);\n\n\t  return (this[offset] * 0x1000000) +\n\t    ((this[offset + 1] << 16) |\n\t    (this[offset + 2] << 8) |\n\t    this[offset + 3])\n\t};\n\n\tBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n\t  offset = offset >>> 0;\n\t  validateNumber(offset, 'offset');\n\t  const first = this[offset];\n\t  const last = this[offset + 7];\n\t  if (first === undefined || last === undefined) {\n\t    boundsError(offset, this.length - 8);\n\t  }\n\n\t  const lo = first +\n\t    this[++offset] * 2 ** 8 +\n\t    this[++offset] * 2 ** 16 +\n\t    this[++offset] * 2 ** 24;\n\n\t  const hi = this[++offset] +\n\t    this[++offset] * 2 ** 8 +\n\t    this[++offset] * 2 ** 16 +\n\t    last * 2 ** 24;\n\n\t  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n\t});\n\n\tBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n\t  offset = offset >>> 0;\n\t  validateNumber(offset, 'offset');\n\t  const first = this[offset];\n\t  const last = this[offset + 7];\n\t  if (first === undefined || last === undefined) {\n\t    boundsError(offset, this.length - 8);\n\t  }\n\n\t  const hi = first * 2 ** 24 +\n\t    this[++offset] * 2 ** 16 +\n\t    this[++offset] * 2 ** 8 +\n\t    this[++offset];\n\n\t  const lo = this[++offset] * 2 ** 24 +\n\t    this[++offset] * 2 ** 16 +\n\t    this[++offset] * 2 ** 8 +\n\t    last;\n\n\t  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n\t});\n\n\tBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n\t  offset = offset >>> 0;\n\t  byteLength = byteLength >>> 0;\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n\t  let val = this[offset];\n\t  let mul = 1;\n\t  let i = 0;\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    val += this[offset + i] * mul;\n\t  }\n\t  mul *= 0x80;\n\n\t  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n\t  return val\n\t};\n\n\tBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n\t  offset = offset >>> 0;\n\t  byteLength = byteLength >>> 0;\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n\t  let i = byteLength;\n\t  let mul = 1;\n\t  let val = this[offset + --i];\n\t  while (i > 0 && (mul *= 0x100)) {\n\t    val += this[offset + --i] * mul;\n\t  }\n\t  mul *= 0x80;\n\n\t  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n\t  return val\n\t};\n\n\tBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n\t  offset = offset >>> 0;\n\t  if (!noAssert) checkOffset(offset, 1, this.length);\n\t  if (!(this[offset] & 0x80)) return (this[offset])\n\t  return ((0xff - this[offset] + 1) * -1)\n\t};\n\n\tBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n\t  offset = offset >>> 0;\n\t  if (!noAssert) checkOffset(offset, 2, this.length);\n\t  const val = this[offset] | (this[offset + 1] << 8);\n\t  return (val & 0x8000) ? val | 0xFFFF0000 : val\n\t};\n\n\tBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n\t  offset = offset >>> 0;\n\t  if (!noAssert) checkOffset(offset, 2, this.length);\n\t  const val = this[offset + 1] | (this[offset] << 8);\n\t  return (val & 0x8000) ? val | 0xFFFF0000 : val\n\t};\n\n\tBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n\t  offset = offset >>> 0;\n\t  if (!noAssert) checkOffset(offset, 4, this.length);\n\n\t  return (this[offset]) |\n\t    (this[offset + 1] << 8) |\n\t    (this[offset + 2] << 16) |\n\t    (this[offset + 3] << 24)\n\t};\n\n\tBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n\t  offset = offset >>> 0;\n\t  if (!noAssert) checkOffset(offset, 4, this.length);\n\n\t  return (this[offset] << 24) |\n\t    (this[offset + 1] << 16) |\n\t    (this[offset + 2] << 8) |\n\t    (this[offset + 3])\n\t};\n\n\tBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n\t  offset = offset >>> 0;\n\t  validateNumber(offset, 'offset');\n\t  const first = this[offset];\n\t  const last = this[offset + 7];\n\t  if (first === undefined || last === undefined) {\n\t    boundsError(offset, this.length - 8);\n\t  }\n\n\t  const val = this[offset + 4] +\n\t    this[offset + 5] * 2 ** 8 +\n\t    this[offset + 6] * 2 ** 16 +\n\t    (last << 24); // Overflow\n\n\t  return (BigInt(val) << BigInt(32)) +\n\t    BigInt(first +\n\t    this[++offset] * 2 ** 8 +\n\t    this[++offset] * 2 ** 16 +\n\t    this[++offset] * 2 ** 24)\n\t});\n\n\tBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n\t  offset = offset >>> 0;\n\t  validateNumber(offset, 'offset');\n\t  const first = this[offset];\n\t  const last = this[offset + 7];\n\t  if (first === undefined || last === undefined) {\n\t    boundsError(offset, this.length - 8);\n\t  }\n\n\t  const val = (first << 24) + // Overflow\n\t    this[++offset] * 2 ** 16 +\n\t    this[++offset] * 2 ** 8 +\n\t    this[++offset];\n\n\t  return (BigInt(val) << BigInt(32)) +\n\t    BigInt(this[++offset] * 2 ** 24 +\n\t    this[++offset] * 2 ** 16 +\n\t    this[++offset] * 2 ** 8 +\n\t    last)\n\t});\n\n\tBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n\t  offset = offset >>> 0;\n\t  if (!noAssert) checkOffset(offset, 4, this.length);\n\t  return ieee754$1.read(this, offset, true, 23, 4)\n\t};\n\n\tBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n\t  offset = offset >>> 0;\n\t  if (!noAssert) checkOffset(offset, 4, this.length);\n\t  return ieee754$1.read(this, offset, false, 23, 4)\n\t};\n\n\tBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n\t  offset = offset >>> 0;\n\t  if (!noAssert) checkOffset(offset, 8, this.length);\n\t  return ieee754$1.read(this, offset, true, 52, 8)\n\t};\n\n\tBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n\t  offset = offset >>> 0;\n\t  if (!noAssert) checkOffset(offset, 8, this.length);\n\t  return ieee754$1.read(this, offset, false, 52, 8)\n\t};\n\n\tfunction checkInt (buf, value, offset, ext, max, min) {\n\t  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n\t  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n\t  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n\t}\n\n\tBuffer.prototype.writeUintLE =\n\tBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n\t  value = +value;\n\t  offset = offset >>> 0;\n\t  byteLength = byteLength >>> 0;\n\t  if (!noAssert) {\n\t    const maxBytes = Math.pow(2, 8 * byteLength) - 1;\n\t    checkInt(this, value, offset, byteLength, maxBytes, 0);\n\t  }\n\n\t  let mul = 1;\n\t  let i = 0;\n\t  this[offset] = value & 0xFF;\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    this[offset + i] = (value / mul) & 0xFF;\n\t  }\n\n\t  return offset + byteLength\n\t};\n\n\tBuffer.prototype.writeUintBE =\n\tBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n\t  value = +value;\n\t  offset = offset >>> 0;\n\t  byteLength = byteLength >>> 0;\n\t  if (!noAssert) {\n\t    const maxBytes = Math.pow(2, 8 * byteLength) - 1;\n\t    checkInt(this, value, offset, byteLength, maxBytes, 0);\n\t  }\n\n\t  let i = byteLength - 1;\n\t  let mul = 1;\n\t  this[offset + i] = value & 0xFF;\n\t  while (--i >= 0 && (mul *= 0x100)) {\n\t    this[offset + i] = (value / mul) & 0xFF;\n\t  }\n\n\t  return offset + byteLength\n\t};\n\n\tBuffer.prototype.writeUint8 =\n\tBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n\t  value = +value;\n\t  offset = offset >>> 0;\n\t  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n\t  this[offset] = (value & 0xff);\n\t  return offset + 1\n\t};\n\n\tBuffer.prototype.writeUint16LE =\n\tBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n\t  value = +value;\n\t  offset = offset >>> 0;\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n\t  this[offset] = (value & 0xff);\n\t  this[offset + 1] = (value >>> 8);\n\t  return offset + 2\n\t};\n\n\tBuffer.prototype.writeUint16BE =\n\tBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n\t  value = +value;\n\t  offset = offset >>> 0;\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n\t  this[offset] = (value >>> 8);\n\t  this[offset + 1] = (value & 0xff);\n\t  return offset + 2\n\t};\n\n\tBuffer.prototype.writeUint32LE =\n\tBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n\t  value = +value;\n\t  offset = offset >>> 0;\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n\t  this[offset + 3] = (value >>> 24);\n\t  this[offset + 2] = (value >>> 16);\n\t  this[offset + 1] = (value >>> 8);\n\t  this[offset] = (value & 0xff);\n\t  return offset + 4\n\t};\n\n\tBuffer.prototype.writeUint32BE =\n\tBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n\t  value = +value;\n\t  offset = offset >>> 0;\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n\t  this[offset] = (value >>> 24);\n\t  this[offset + 1] = (value >>> 16);\n\t  this[offset + 2] = (value >>> 8);\n\t  this[offset + 3] = (value & 0xff);\n\t  return offset + 4\n\t};\n\n\tfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n\t  checkIntBI(value, min, max, buf, offset, 7);\n\n\t  let lo = Number(value & BigInt(0xffffffff));\n\t  buf[offset++] = lo;\n\t  lo = lo >> 8;\n\t  buf[offset++] = lo;\n\t  lo = lo >> 8;\n\t  buf[offset++] = lo;\n\t  lo = lo >> 8;\n\t  buf[offset++] = lo;\n\t  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff));\n\t  buf[offset++] = hi;\n\t  hi = hi >> 8;\n\t  buf[offset++] = hi;\n\t  hi = hi >> 8;\n\t  buf[offset++] = hi;\n\t  hi = hi >> 8;\n\t  buf[offset++] = hi;\n\t  return offset\n\t}\n\n\tfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n\t  checkIntBI(value, min, max, buf, offset, 7);\n\n\t  let lo = Number(value & BigInt(0xffffffff));\n\t  buf[offset + 7] = lo;\n\t  lo = lo >> 8;\n\t  buf[offset + 6] = lo;\n\t  lo = lo >> 8;\n\t  buf[offset + 5] = lo;\n\t  lo = lo >> 8;\n\t  buf[offset + 4] = lo;\n\t  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff));\n\t  buf[offset + 3] = hi;\n\t  hi = hi >> 8;\n\t  buf[offset + 2] = hi;\n\t  hi = hi >> 8;\n\t  buf[offset + 1] = hi;\n\t  hi = hi >> 8;\n\t  buf[offset] = hi;\n\t  return offset + 8\n\t}\n\n\tBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n\t  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n\t});\n\n\tBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n\t  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n\t});\n\n\tBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n\t  value = +value;\n\t  offset = offset >>> 0;\n\t  if (!noAssert) {\n\t    const limit = Math.pow(2, (8 * byteLength) - 1);\n\n\t    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n\t  }\n\n\t  let i = 0;\n\t  let mul = 1;\n\t  let sub = 0;\n\t  this[offset] = value & 0xFF;\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n\t      sub = 1;\n\t    }\n\t    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;\n\t  }\n\n\t  return offset + byteLength\n\t};\n\n\tBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n\t  value = +value;\n\t  offset = offset >>> 0;\n\t  if (!noAssert) {\n\t    const limit = Math.pow(2, (8 * byteLength) - 1);\n\n\t    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n\t  }\n\n\t  let i = byteLength - 1;\n\t  let mul = 1;\n\t  let sub = 0;\n\t  this[offset + i] = value & 0xFF;\n\t  while (--i >= 0 && (mul *= 0x100)) {\n\t    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n\t      sub = 1;\n\t    }\n\t    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;\n\t  }\n\n\t  return offset + byteLength\n\t};\n\n\tBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n\t  value = +value;\n\t  offset = offset >>> 0;\n\t  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n\t  if (value < 0) value = 0xff + value + 1;\n\t  this[offset] = (value & 0xff);\n\t  return offset + 1\n\t};\n\n\tBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n\t  value = +value;\n\t  offset = offset >>> 0;\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n\t  this[offset] = (value & 0xff);\n\t  this[offset + 1] = (value >>> 8);\n\t  return offset + 2\n\t};\n\n\tBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n\t  value = +value;\n\t  offset = offset >>> 0;\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n\t  this[offset] = (value >>> 8);\n\t  this[offset + 1] = (value & 0xff);\n\t  return offset + 2\n\t};\n\n\tBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n\t  value = +value;\n\t  offset = offset >>> 0;\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n\t  this[offset] = (value & 0xff);\n\t  this[offset + 1] = (value >>> 8);\n\t  this[offset + 2] = (value >>> 16);\n\t  this[offset + 3] = (value >>> 24);\n\t  return offset + 4\n\t};\n\n\tBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n\t  value = +value;\n\t  offset = offset >>> 0;\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n\t  if (value < 0) value = 0xffffffff + value + 1;\n\t  this[offset] = (value >>> 24);\n\t  this[offset + 1] = (value >>> 16);\n\t  this[offset + 2] = (value >>> 8);\n\t  this[offset + 3] = (value & 0xff);\n\t  return offset + 4\n\t};\n\n\tBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n\t  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n\t});\n\n\tBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n\t  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n\t});\n\n\tfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n\t  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n\t  if (offset < 0) throw new RangeError('Index out of range')\n\t}\n\n\tfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n\t  value = +value;\n\t  offset = offset >>> 0;\n\t  if (!noAssert) {\n\t    checkIEEE754(buf, value, offset, 4);\n\t  }\n\t  ieee754$1.write(buf, value, offset, littleEndian, 23, 4);\n\t  return offset + 4\n\t}\n\n\tBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n\t  return writeFloat(this, value, offset, true, noAssert)\n\t};\n\n\tBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n\t  return writeFloat(this, value, offset, false, noAssert)\n\t};\n\n\tfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n\t  value = +value;\n\t  offset = offset >>> 0;\n\t  if (!noAssert) {\n\t    checkIEEE754(buf, value, offset, 8);\n\t  }\n\t  ieee754$1.write(buf, value, offset, littleEndian, 52, 8);\n\t  return offset + 8\n\t}\n\n\tBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n\t  return writeDouble(this, value, offset, true, noAssert)\n\t};\n\n\tBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n\t  return writeDouble(this, value, offset, false, noAssert)\n\t};\n\n\t// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\tBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n\t  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n\t  if (!start) start = 0;\n\t  if (!end && end !== 0) end = this.length;\n\t  if (targetStart >= target.length) targetStart = target.length;\n\t  if (!targetStart) targetStart = 0;\n\t  if (end > 0 && end < start) end = start;\n\n\t  // Copy 0 bytes; we're done\n\t  if (end === start) return 0\n\t  if (target.length === 0 || this.length === 0) return 0\n\n\t  // Fatal error conditions\n\t  if (targetStart < 0) {\n\t    throw new RangeError('targetStart out of bounds')\n\t  }\n\t  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n\t  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n\t  // Are we oob?\n\t  if (end > this.length) end = this.length;\n\t  if (target.length - targetStart < end - start) {\n\t    end = target.length - targetStart + start;\n\t  }\n\n\t  const len = end - start;\n\n\t  if (this === target && typeof GlobalUint8Array.prototype.copyWithin === 'function') {\n\t    // Use built-in when available, missing from IE11\n\t    this.copyWithin(targetStart, start, end);\n\t  } else {\n\t    GlobalUint8Array.prototype.set.call(\n\t      target,\n\t      this.subarray(start, end),\n\t      targetStart\n\t    );\n\t  }\n\n\t  return len\n\t};\n\n\t// Usage:\n\t//    buffer.fill(number[, offset[, end]])\n\t//    buffer.fill(buffer[, offset[, end]])\n\t//    buffer.fill(string[, offset[, end]][, encoding])\n\tBuffer.prototype.fill = function fill (val, start, end, encoding) {\n\t  // Handle string cases:\n\t  if (typeof val === 'string') {\n\t    if (typeof start === 'string') {\n\t      encoding = start;\n\t      start = 0;\n\t      end = this.length;\n\t    } else if (typeof end === 'string') {\n\t      encoding = end;\n\t      end = this.length;\n\t    }\n\t    if (encoding !== undefined && typeof encoding !== 'string') {\n\t      throw new TypeError('encoding must be a string')\n\t    }\n\t    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n\t      throw new TypeError('Unknown encoding: ' + encoding)\n\t    }\n\t    if (val.length === 1) {\n\t      const code = val.charCodeAt(0);\n\t      if ((encoding === 'utf8' && code < 128) ||\n\t          encoding === 'latin1') {\n\t        // Fast path: If `val` fits into a single byte, use that numeric value.\n\t        val = code;\n\t      }\n\t    }\n\t  } else if (typeof val === 'number') {\n\t    val = val & 255;\n\t  } else if (typeof val === 'boolean') {\n\t    val = Number(val);\n\t  }\n\n\t  // Invalid ranges are not set to a default, so can range check early.\n\t  if (start < 0 || this.length < start || this.length < end) {\n\t    throw new RangeError('Out of range index')\n\t  }\n\n\t  if (end <= start) {\n\t    return this\n\t  }\n\n\t  start = start >>> 0;\n\t  end = end === undefined ? this.length : end >>> 0;\n\n\t  if (!val) val = 0;\n\n\t  let i;\n\t  if (typeof val === 'number') {\n\t    for (i = start; i < end; ++i) {\n\t      this[i] = val;\n\t    }\n\t  } else {\n\t    const bytes = Buffer.isBuffer(val)\n\t      ? val\n\t      : Buffer.from(val, encoding);\n\t    const len = bytes.length;\n\t    if (len === 0) {\n\t      throw new TypeError('The value \"' + val +\n\t        '\" is invalid for argument \"value\"')\n\t    }\n\t    for (i = 0; i < end - start; ++i) {\n\t      this[i + start] = bytes[i % len];\n\t    }\n\t  }\n\n\t  return this\n\t};\n\n\t// CUSTOM ERRORS\n\t// =============\n\n\t// Simplified versions from Node, changed for Buffer-only usage\n\tconst errors = {};\n\tfunction E (sym, getMessage, Base) {\n\t  errors[sym] = class NodeError extends Base {\n\t    constructor () {\n\t      super();\n\n\t      Object.defineProperty(this, 'message', {\n\t        value: getMessage.apply(this, arguments),\n\t        writable: true,\n\t        configurable: true\n\t      });\n\n\t      // Add the error code to the name to include it in the stack trace.\n\t      this.name = `${this.name} [${sym}]`;\n\t      // Access the stack to generate the error message including the error code\n\t      // from the name.\n\t      this.stack; // eslint-disable-line no-unused-expressions\n\t      // Reset the name to the actual name.\n\t      delete this.name;\n\t    }\n\n\t    get code () {\n\t      return sym\n\t    }\n\n\t    set code (value) {\n\t      Object.defineProperty(this, 'code', {\n\t        configurable: true,\n\t        enumerable: true,\n\t        value,\n\t        writable: true\n\t      });\n\t    }\n\n\t    toString () {\n\t      return `${this.name} [${sym}]: ${this.message}`\n\t    }\n\t  };\n\t}\n\n\tE('ERR_BUFFER_OUT_OF_BOUNDS',\n\t  function (name) {\n\t    if (name) {\n\t      return `${name} is outside of buffer bounds`\n\t    }\n\n\t    return 'Attempt to access memory outside buffer bounds'\n\t  }, RangeError);\n\tE('ERR_INVALID_ARG_TYPE',\n\t  function (name, actual) {\n\t    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n\t  }, TypeError);\n\tE('ERR_OUT_OF_RANGE',\n\t  function (str, range, input) {\n\t    let msg = `The value of \"${str}\" is out of range.`;\n\t    let received = input;\n\t    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n\t      received = addNumericalSeparator(String(input));\n\t    } else if (typeof input === 'bigint') {\n\t      received = String(input);\n\t      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n\t        received = addNumericalSeparator(received);\n\t      }\n\t      received += 'n';\n\t    }\n\t    msg += ` It must be ${range}. Received ${received}`;\n\t    return msg\n\t  }, RangeError);\n\n\tfunction addNumericalSeparator (val) {\n\t  let res = '';\n\t  let i = val.length;\n\t  const start = val[0] === '-' ? 1 : 0;\n\t  for (; i >= start + 4; i -= 3) {\n\t    res = `_${val.slice(i - 3, i)}${res}`;\n\t  }\n\t  return `${val.slice(0, i)}${res}`\n\t}\n\n\t// CHECK FUNCTIONS\n\t// ===============\n\n\tfunction checkBounds (buf, offset, byteLength) {\n\t  validateNumber(offset, 'offset');\n\t  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n\t    boundsError(offset, buf.length - (byteLength + 1));\n\t  }\n\t}\n\n\tfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n\t  if (value > max || value < min) {\n\t    const n = typeof min === 'bigint' ? 'n' : '';\n\t    let range;\n\t    if (byteLength > 3) {\n\t      if (min === 0 || min === BigInt(0)) {\n\t        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;\n\t      } else {\n\t        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n\t                `${(byteLength + 1) * 8 - 1}${n}`;\n\t      }\n\t    } else {\n\t      range = `>= ${min}${n} and <= ${max}${n}`;\n\t    }\n\t    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n\t  }\n\t  checkBounds(buf, offset, byteLength);\n\t}\n\n\tfunction validateNumber (value, name) {\n\t  if (typeof value !== 'number') {\n\t    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n\t  }\n\t}\n\n\tfunction boundsError (value, length, type) {\n\t  if (Math.floor(value) !== value) {\n\t    validateNumber(value, type);\n\t    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n\t  }\n\n\t  if (length < 0) {\n\t    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n\t  }\n\n\t  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n\t                                    `>= ${type ? 1 : 0} and <= ${length}`,\n\t                                    value)\n\t}\n\n\t// HELPER FUNCTIONS\n\t// ================\n\n\tconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;\n\n\tfunction base64clean (str) {\n\t  // Node takes equal signs as end of the Base64 encoding\n\t  str = str.split('=')[0];\n\t  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n\t  str = str.trim().replace(INVALID_BASE64_RE, '');\n\t  // Node converts strings with length < 2 to ''\n\t  if (str.length < 2) return ''\n\t  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\t  while (str.length % 4 !== 0) {\n\t    str = str + '=';\n\t  }\n\t  return str\n\t}\n\n\tfunction utf8ToBytes (string, units) {\n\t  units = units || Infinity;\n\t  let codePoint;\n\t  const length = string.length;\n\t  let leadSurrogate = null;\n\t  const bytes = [];\n\n\t  for (let i = 0; i < length; ++i) {\n\t    codePoint = string.charCodeAt(i);\n\n\t    // is surrogate component\n\t    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n\t      // last char was a lead\n\t      if (!leadSurrogate) {\n\t        // no lead yet\n\t        if (codePoint > 0xDBFF) {\n\t          // unexpected trail\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n\t          continue\n\t        } else if (i + 1 === length) {\n\t          // unpaired lead\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n\t          continue\n\t        }\n\n\t        // valid lead\n\t        leadSurrogate = codePoint;\n\n\t        continue\n\t      }\n\n\t      // 2 leads in a row\n\t      if (codePoint < 0xDC00) {\n\t        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n\t        leadSurrogate = codePoint;\n\t        continue\n\t      }\n\n\t      // valid surrogate pair\n\t      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n\t    } else if (leadSurrogate) {\n\t      // valid bmp char, but last char was a lead\n\t      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n\t    }\n\n\t    leadSurrogate = null;\n\n\t    // encode utf8\n\t    if (codePoint < 0x80) {\n\t      if ((units -= 1) < 0) break\n\t      bytes.push(codePoint);\n\t    } else if (codePoint < 0x800) {\n\t      if ((units -= 2) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0x6 | 0xC0,\n\t        codePoint & 0x3F | 0x80\n\t      );\n\t    } else if (codePoint < 0x10000) {\n\t      if ((units -= 3) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0xC | 0xE0,\n\t        codePoint >> 0x6 & 0x3F | 0x80,\n\t        codePoint & 0x3F | 0x80\n\t      );\n\t    } else if (codePoint < 0x110000) {\n\t      if ((units -= 4) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0x12 | 0xF0,\n\t        codePoint >> 0xC & 0x3F | 0x80,\n\t        codePoint >> 0x6 & 0x3F | 0x80,\n\t        codePoint & 0x3F | 0x80\n\t      );\n\t    } else {\n\t      throw new Error('Invalid code point')\n\t    }\n\t  }\n\n\t  return bytes\n\t}\n\n\tfunction asciiToBytes (str) {\n\t  const byteArray = [];\n\t  for (let i = 0; i < str.length; ++i) {\n\t    // Node's code seems to be doing this and not & 0x7F..\n\t    byteArray.push(str.charCodeAt(i) & 0xFF);\n\t  }\n\t  return byteArray\n\t}\n\n\tfunction utf16leToBytes (str, units) {\n\t  let c, hi, lo;\n\t  const byteArray = [];\n\t  for (let i = 0; i < str.length; ++i) {\n\t    if ((units -= 2) < 0) break\n\n\t    c = str.charCodeAt(i);\n\t    hi = c >> 8;\n\t    lo = c % 256;\n\t    byteArray.push(lo);\n\t    byteArray.push(hi);\n\t  }\n\n\t  return byteArray\n\t}\n\n\tfunction base64ToBytes (str) {\n\t  return base64.toByteArray(base64clean(str))\n\t}\n\n\tfunction blitBuffer (src, dst, offset, length) {\n\t  let i;\n\t  for (i = 0; i < length; ++i) {\n\t    if ((i + offset >= dst.length) || (i >= src.length)) break\n\t    dst[i + offset] = src[i];\n\t  }\n\t  return i\n\t}\n\n\t// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n\t// the `instanceof` check but they should be treated as of that type.\n\t// See: https://github.com/feross/buffer/issues/166\n\tfunction isInstance (obj, type) {\n\t  return obj instanceof type ||\n\t    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n\t      obj.constructor.name === type.name)\n\t}\n\tfunction numberIsNaN (obj) {\n\t  // For IE11 support\n\t  return obj !== obj // eslint-disable-line no-self-compare\n\t}\n\n\t// Create lookup table for `toString('hex')`\n\t// See: https://github.com/feross/buffer/issues/219\n\tconst hexSliceLookupTable = (function () {\n\t  const alphabet = '0123456789abcdef';\n\t  const table = new Array(256);\n\t  for (let i = 0; i < 16; ++i) {\n\t    const i16 = i * 16;\n\t    for (let j = 0; j < 16; ++j) {\n\t      table[i16 + j] = alphabet[i] + alphabet[j];\n\t    }\n\t  }\n\t  return table\n\t})();\n\n\t// Return not function with Error if BigInt not supported\n\tfunction defineBigIntMethod (fn) {\n\t  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n\t}\n\n\tfunction BufferBigIntNotDefined () {\n\t  throw new Error('BigInt not supported')\n\t} \n} (buffer));\n\nconst Buffer = buffer.Buffer;\n\nconst Blob = buffer.Blob;\nconst BlobOptions = buffer.BlobOptions;\nconst Buffer$1 = buffer.Buffer;\nconst File = buffer.File;\nconst FileOptions = buffer.FileOptions;\nconst INSPECT_MAX_BYTES = buffer.INSPECT_MAX_BYTES;\nconst SlowBuffer = buffer.SlowBuffer;\nconst TranscodeEncoding = buffer.TranscodeEncoding;\nconst atob = buffer.atob;\nconst btoa = buffer.btoa;\nconst constants = buffer.constants;\nconst isAscii = buffer.isAscii;\nconst isUtf8 = buffer.isUtf8;\nconst kMaxLength = buffer.kMaxLength;\nconst kStringMaxLength = buffer.kStringMaxLength;\nconst resolveObjectURL = buffer.resolveObjectURL;\nconst transcode = buffer.transcode;\nexport { Blob, BlobOptions, Buffer$1 as Buffer, File, FileOptions, INSPECT_MAX_BYTES, SlowBuffer, TranscodeEncoding, atob, btoa, constants, Buffer as default, isAscii, isUtf8, kMaxLength, kStringMaxLength, resolveObjectURL, transcode };\n//# sourceMappingURL=index.js.map\n","(function(scope) {'use strict';\nfunction B(r,e){var f;return r instanceof Buffer?f=r:f=Buffer.from(r.buffer,r.byteOffset,r.byteLength),f.toString(e)}var w=function(r){return Buffer.from(r)};function h(r){for(var e=0,f=Math.min(256*256,r.length+1),n=new Uint16Array(f),i=[],o=0;;){var t=e<r.length;if(!t||o>=f-1){var s=n.subarray(0,o),m=s;if(i.push(String.fromCharCode.apply(null,m)),!t)return i.join(\"\");r=r.subarray(e),e=0,o=0}var a=r[e++];if((a&128)===0)n[o++]=a;else if((a&224)===192){var d=r[e++]&63;n[o++]=(a&31)<<6|d}else if((a&240)===224){var d=r[e++]&63,l=r[e++]&63;n[o++]=(a&31)<<12|d<<6|l}else if((a&248)===240){var d=r[e++]&63,l=r[e++]&63,R=r[e++]&63,c=(a&7)<<18|d<<12|l<<6|R;c>65535&&(c-=65536,n[o++]=c>>>10&1023|55296,c=56320|c&1023),n[o++]=c}}}function F(r){for(var e=0,f=r.length,n=0,i=Math.max(32,f+(f>>>1)+7),o=new Uint8Array(i>>>3<<3);e<f;){var t=r.charCodeAt(e++);if(t>=55296&&t<=56319){if(e<f){var s=r.charCodeAt(e);(s&64512)===56320&&(++e,t=((t&1023)<<10)+(s&1023)+65536)}if(t>=55296&&t<=56319)continue}if(n+4>o.length){i+=8,i*=1+e/r.length*2,i=i>>>3<<3;var m=new Uint8Array(i);m.set(o),o=m}if((t&4294967168)===0){o[n++]=t;continue}else if((t&4294965248)===0)o[n++]=t>>>6&31|192;else if((t&4294901760)===0)o[n++]=t>>>12&15|224,o[n++]=t>>>6&63|128;else if((t&4292870144)===0)o[n++]=t>>>18&7|240,o[n++]=t>>>12&63|128,o[n++]=t>>>6&63|128;else continue;o[n++]=t&63|128}return o.slice?o.slice(0,n):o.subarray(0,n)}var u=\"Failed to \",p=function(r,e,f){if(r)throw new Error(\"\".concat(u).concat(e,\": the '\").concat(f,\"' option is unsupported.\"))};var x=typeof Buffer==\"function\"&&Buffer.from;var A=x?w:F;function v(){this.encoding=\"utf-8\"}v.prototype.encode=function(r,e){return p(e&&e.stream,\"encode\",\"stream\"),A(r)};function U(r){var e;try{var f=new Blob([r],{type:\"text/plain;charset=UTF-8\"});e=URL.createObjectURL(f);var n=new XMLHttpRequest;return n.open(\"GET\",e,!1),n.send(),n.responseText}finally{e&&URL.revokeObjectURL(e)}}var O=!x&&typeof Blob==\"function\"&&typeof URL==\"function\"&&typeof URL.createObjectURL==\"function\",S=[\"utf-8\",\"utf8\",\"unicode-1-1-utf-8\"],T=h;x?T=B:O&&(T=function(r){try{return U(r)}catch(e){return h(r)}});var y=\"construct 'TextDecoder'\",E=\"\".concat(u,\" \").concat(y,\": the \");function g(r,e){p(e&&e.fatal,y,\"fatal\"),r=r||\"utf-8\";var f;if(x?f=Buffer.isEncoding(r):f=S.indexOf(r.toLowerCase())!==-1,!f)throw new RangeError(\"\".concat(E,\" encoding label provided ('\").concat(r,\"') is invalid.\"));this.encoding=r,this.fatal=!1,this.ignoreBOM=!1}g.prototype.decode=function(r,e){p(e&&e.stream,\"decode\",\"stream\");var f;return r instanceof Uint8Array?f=r:r.buffer instanceof ArrayBuffer?f=new Uint8Array(r.buffer):f=new Uint8Array(r),T(f,this.encoding)};scope.TextEncoder=scope.TextEncoder||v;scope.TextDecoder=scope.TextDecoder||g;\n}(typeof window !== 'undefined' ? window : (typeof global !== 'undefined' ? global : this)));\n","// Polyfill TextEncoder for MS Edge\nrequire('fast-text-encoding')\n\nmodule.exports = {\n  encode: string => new TextEncoder().encode(string),\n  decode: buffer => new TextDecoder().decode(buffer)\n};\n","module.exports = debounce;\n\nfunction debounce(fn, wait, callFirst) {\n  var timeout;\n  return function() {\n    if (!wait) {\n      return fn.apply(this, arguments);\n    }\n    var context = this;\n    var args = arguments;\n    var callNow = callFirst && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(function() {\n      timeout = null;\n      if (!callNow) {\n        return fn.apply(context, args);\n      }\n    }, wait);\n\n    if (callNow) {\n      return fn.apply(this, arguments);\n    }\n  };\n}\n","function normalizePath(path) {\n  if (path.length === 0) {\n    return \".\";\n  }\n  let parts = splitPath(path);\n  parts = parts.reduce(reducer, []);\n  return joinPath(...parts);\n}\n\nfunction resolvePath(...paths) {\n  let result = '';\n  for (let path of paths) {\n    if (path.startsWith('/')) {\n      result = path;\n    } else {\n      result = normalizePath(joinPath(result, path));\n    }\n  }\n  return result;\n}\n\nfunction joinPath(...parts) {\n  if (parts.length === 0) return \"\";\n  let path = parts.join(\"/\");\n  // Replace consecutive '/'\n  path = path.replace(/\\/{2,}/g, \"/\");\n  return path;\n}\n\nfunction splitPath(path) {\n  if (path.length === 0) return [];\n  if (path === \"/\") return [\"/\"];\n  let parts = path.split(\"/\");\n  if (parts[parts.length - 1] === '') {\n      parts.pop();\n  }\n  if (path[0] === \"/\") {\n    // assert(parts[0] === '')\n    parts[0] = \"/\";\n  } else {\n    if (parts[0] !== \".\") {\n      parts.unshift(\".\");\n    }\n  }\n  return parts;\n}\n\nfunction dirname(path) {\n  const last = path.lastIndexOf(\"/\");\n  if (last === -1) throw new Error(`Cannot get dirname of \"${path}\"`);\n  if (last === 0) return \"/\";\n  return path.slice(0, last);\n}\n\nfunction basename(path) {\n  if (path === \"/\") throw new Error(`Cannot get basename of \"${path}\"`);\n  const last = path.lastIndexOf(\"/\");\n  if (last === -1) return path;\n  return path.slice(last + 1);\n}\n\nfunction reducer(ancestors, current) {\n  // Initial condition\n  if (ancestors.length === 0) {\n    ancestors.push(current);\n    return ancestors;\n  }\n  // assert(ancestors.length > 0)\n  // assert(ancestors[0] === '.' || ancestors[0] === '/')\n\n  // Collapse '.' references\n  if (current === \".\") return ancestors;\n\n  // Collapse '..' references\n  if (current === \"..\") {\n    if (ancestors.length === 1) {\n      if (ancestors[0] === \"/\") {\n        throw new Error(\"Unable to normalize path - traverses above root directory\");\n      }\n      // assert(ancestors[0] === '.')\n      if (ancestors[0] === \".\") {\n        ancestors.push(current);\n        return ancestors;\n      }\n    }\n    // assert(ancestors.length > 1)\n    if (ancestors[ancestors.length - 1] === \"..\") {\n      ancestors.push(\"..\");\n      return ancestors;\n    } else {\n      ancestors.pop();\n      return ancestors;\n    }\n  }\n\n  ancestors.push(current);\n  return ancestors;\n}\n\nmodule.exports = {\n  join: joinPath,\n  normalize: normalizePath,\n  split: splitPath,\n  basename,\n  dirname,\n  resolve: resolvePath,\n};\n","function Err(name) {\n  return class extends Error {\n    constructor(...args) {\n      super(...args);\n      this.code = name;\n      if (this.message) {\n        this.message = name + \": \" + this.message;\n      } else {\n        this.message = name;\n      }\n    }\n  };\n}\n\nconst EEXIST = Err(\"EEXIST\");\nconst ENOENT = Err(\"ENOENT\");\nconst ENOTDIR = Err(\"ENOTDIR\");\nconst ENOTEMPTY = Err(\"ENOTEMPTY\");\nconst ETIMEDOUT = Err(\"ETIMEDOUT\");\n\nmodule.exports = { EEXIST, ENOENT, ENOTDIR, ENOTEMPTY, ETIMEDOUT };\n","const path = require(\"./path.js\");\nconst { EEXIST, ENOENT, ENOTDIR, ENOTEMPTY } = require(\"./errors.js\");\n\nconst STAT = 0;\n\nmodule.exports = class CacheFS {\n  constructor() {\n  }\n  _makeRoot(root = new Map()) {\n    root.set(STAT, { mode: 0o777, type: \"dir\", size: 0, ino: 0, mtimeMs: Date.now() });\n    return root\n  }\n  activate(superblock = null) {\n    if (superblock === null) {\n      this._root = new Map([[\"/\", this._makeRoot()]]);\n    } else if (typeof superblock === 'string') {\n      this._root = new Map([[\"/\", this._makeRoot(this.parse(superblock))]]);\n    } else {\n      this._root = superblock\n    }\n  }\n  get activated () {\n    return !!this._root\n  }\n  deactivate () {\n    this._root = void 0\n  }\n  size () {\n    // subtract 1 to ignore the root directory itself from the count.\n    return this._countInodes(this._root.get(\"/\")) - 1;\n  }\n  _countInodes(map) {\n    let count = 1;\n    for (let [key, val] of map) {\n      if (key === STAT) continue;\n      count += this._countInodes(val);\n    }\n    return count;\n  }\n  autoinc () {\n    let val = this._maxInode(this._root.get(\"/\")) + 1;\n    return val;\n  }\n  _maxInode(map) {\n    let max = map.get(STAT).ino;\n    for (let [key, val] of map) {\n      if (key === STAT) continue;\n      max = Math.max(max, this._maxInode(val));\n    }\n    return max;\n  }\n  print(root = this._root.get(\"/\")) {\n    let str = \"\";\n    const printTree = (root, indent) => {\n      for (let [file, node] of root) {\n        if (file === 0) continue;\n        let stat = node.get(STAT);\n        let mode = stat.mode.toString(8);\n        str += `${\"\\t\".repeat(indent)}${file}\\t${mode}`\n        if (stat.type === \"file\") {\n          str += `\\t${stat.size}\\t${stat.mtimeMs}\\n`;\n        } else {\n          str += `\\n`\n          printTree(node, indent + 1);\n        }\n      }\n    };\n    printTree(root, 0);\n    return str;\n  }\n  parse(print) {\n    let autoinc = 0;\n\n    function mk(stat) {\n      const ino = ++autoinc;\n      // TODO: Use a better heuristic for determining whether file or dir\n      const type = stat.length === 1 ? \"dir\" : \"file\"\n      let [mode, size, mtimeMs] = stat;\n      mode = parseInt(mode, 8);\n      size = size ? parseInt(size) : 0;\n      mtimeMs = mtimeMs ? parseInt(mtimeMs) : Date.now();\n      return new Map([[STAT, { mode, type, size, mtimeMs, ino }]]);\n    }\n\n    let lines = print.trim().split(\"\\n\");\n    let _root = this._makeRoot();\n    let stack = [\n      { indent: -1, node: _root },\n      { indent: 0, node: null }\n    ];\n    for (let line of lines) {\n      let prefix = line.match(/^\\t*/)[0];\n      let indent = prefix.length;\n      line = line.slice(indent);\n      let [filename, ...stat] = line.split(\"\\t\");\n      let node = mk(stat);\n      if (indent <= stack[stack.length - 1].indent) {\n        while (indent <= stack[stack.length - 1].indent) {\n          stack.pop();\n        }\n      }\n      stack.push({ indent, node });\n      let cd = stack[stack.length - 2].node;\n      cd.set(filename, node);\n    }\n    return _root;\n  }\n  _lookup(filepath, follow = true) {\n    let dir = this._root;\n    let partialPath = '/'\n    let parts = path.split(filepath)\n    for (let i = 0; i < parts.length; ++ i) {\n      let part = parts[i];\n      dir = dir.get(part);\n      if (!dir) throw new ENOENT(filepath);\n      // Follow symlinks\n      if (follow || i < parts.length - 1) {\n        const stat = dir.get(STAT)\n        if (stat.type === 'symlink') {\n          let target = path.resolve(partialPath, stat.target)\n          dir = this._lookup(target)\n        }\n        if (!partialPath) {\n          partialPath = part\n        } else {\n          partialPath = path.join(partialPath, part)\n        }\n      }\n    }\n    return dir;\n  }\n  mkdir(filepath, { mode }) {\n    if (filepath === \"/\") throw new EEXIST();\n    let dir = this._lookup(path.dirname(filepath));\n    let basename = path.basename(filepath);\n    if (dir.has(basename)) {\n      throw new EEXIST();\n    }\n    let entry = new Map();\n    let stat = {\n      mode,\n      type: \"dir\",\n      size: 0,\n      mtimeMs: Date.now(),\n      ino: this.autoinc(),\n    };\n    entry.set(STAT, stat);\n    dir.set(basename, entry);\n  }\n  rmdir(filepath) {\n    let dir = this._lookup(filepath);\n    if (dir.get(STAT).type !== 'dir') throw new ENOTDIR();\n    // check it's empty (size should be 1 for just StatSym)\n    if (dir.size > 1) throw new ENOTEMPTY();\n    // remove from parent\n    let parent = this._lookup(path.dirname(filepath));\n    let basename = path.basename(filepath);\n    parent.delete(basename);\n  }\n  readdir(filepath) {\n    let dir = this._lookup(filepath);\n    if (dir.get(STAT).type !== 'dir') throw new ENOTDIR();\n    return [...dir.keys()].filter(key => typeof key === \"string\");\n  }\n  writeStat(filepath, size, { mode }) {\n    let ino;\n    try {\n      let oldStat = this.stat(filepath);\n      if (mode == null) {\n        mode = oldStat.mode;\n      }\n      ino = oldStat.ino;\n    } catch (err) {}\n    if (mode == null) {\n      mode = 0o666;\n    }\n    if (ino == null) {\n      ino = this.autoinc();\n    }\n    let dir = this._lookup(path.dirname(filepath));\n    let basename = path.basename(filepath);\n    let stat = {\n      mode,\n      type: \"file\",\n      size,\n      mtimeMs: Date.now(),\n      ino,\n    };\n    let entry = new Map();\n    entry.set(STAT, stat);\n    dir.set(basename, entry);\n    return stat;\n  }\n  unlink(filepath) {\n    // remove from parent\n    let parent = this._lookup(path.dirname(filepath));\n    let basename = path.basename(filepath);\n    parent.delete(basename);\n  }\n  rename(oldFilepath, newFilepath) {\n    let basename = path.basename(newFilepath);\n    // Note: do both lookups before making any changes\n    // so if lookup throws, we don't lose data (issue #23)\n    // grab references\n    let entry = this._lookup(oldFilepath);\n    let destDir = this._lookup(path.dirname(newFilepath));\n    // insert into new parent directory\n    destDir.set(basename, entry);\n    // remove from old parent directory\n    this.unlink(oldFilepath)\n  }\n  stat(filepath) {\n    return this._lookup(filepath).get(STAT);\n  }\n  lstat(filepath) {\n    return this._lookup(filepath, false).get(STAT);\n  }\n  readlink(filepath) {\n    return this._lookup(filepath, false).get(STAT).target;\n  }\n  symlink(target, filepath) {\n    let ino, mode;\n    try {\n      let oldStat = this.stat(filepath);\n      if (mode === null) {\n        mode = oldStat.mode;\n      }\n      ino = oldStat.ino;\n    } catch (err) {}\n    if (mode == null) {\n      mode = 0o120000;\n    }\n    if (ino == null) {\n      ino = this.autoinc();\n    }\n    let dir = this._lookup(path.dirname(filepath));\n    let basename = path.basename(filepath);\n    let stat = {\n      mode,\n      type: \"symlink\",\n      target,\n      size: 0,\n      mtimeMs: Date.now(),\n      ino,\n    };\n    let entry = new Map();\n    entry.set(STAT, stat);\n    dir.set(basename, entry);\n    return stat;\n  }\n  _du (dir) {\n    let size = 0;\n    for (const [name, entry] of dir.entries()) {\n      if (name === STAT) {\n        size += entry.size;\n      } else {\n        size += this._du(entry);\n      }\n    }\n    return size;\n  }\n  du (filepath) {\n    let dir = this._lookup(filepath);\n    return this._du(dir);\n  }\n};\n","class Store {\r\n    constructor(dbName = 'keyval-store', storeName = 'keyval') {\r\n        this.storeName = storeName;\r\n        this._dbName = dbName;\r\n        this._storeName = storeName;\r\n        this._init();\r\n    }\r\n    _init() {\r\n        if (this._dbp) {\r\n            return;\r\n        }\r\n        this._dbp = new Promise((resolve, reject) => {\r\n            const openreq = indexedDB.open(this._dbName);\r\n            openreq.onerror = () => reject(openreq.error);\r\n            openreq.onsuccess = () => resolve(openreq.result);\r\n            // First time setup: create an empty object store\r\n            openreq.onupgradeneeded = () => {\r\n                openreq.result.createObjectStore(this._storeName);\r\n            };\r\n        });\r\n    }\r\n    _withIDBStore(type, callback) {\r\n        this._init();\r\n        return this._dbp.then(db => new Promise((resolve, reject) => {\r\n            const transaction = db.transaction(this.storeName, type);\r\n            transaction.oncomplete = () => resolve();\r\n            transaction.onabort = transaction.onerror = () => reject(transaction.error);\r\n            callback(transaction.objectStore(this.storeName));\r\n        }));\r\n    }\r\n    _close() {\r\n        this._init();\r\n        return this._dbp.then(db => {\r\n            db.close();\r\n            this._dbp = undefined;\r\n        });\r\n    }\r\n}\r\nlet store;\r\nfunction getDefaultStore() {\r\n    if (!store)\r\n        store = new Store();\r\n    return store;\r\n}\r\nfunction get(key, store = getDefaultStore()) {\r\n    let req;\r\n    return store._withIDBStore('readwrite', store => {\r\n        req = store.get(key);\r\n    }).then(() => req.result);\r\n}\r\nfunction set(key, value, store = getDefaultStore()) {\r\n    return store._withIDBStore('readwrite', store => {\r\n        store.put(value, key);\r\n    });\r\n}\r\nfunction update(key, updater, store = getDefaultStore()) {\r\n    return store._withIDBStore('readwrite', store => {\r\n        const req = store.get(key);\r\n        req.onsuccess = () => {\r\n            store.put(updater(req.result), key);\r\n        };\r\n    });\r\n}\r\nfunction del(key, store = getDefaultStore()) {\r\n    return store._withIDBStore('readwrite', store => {\r\n        store.delete(key);\r\n    });\r\n}\r\nfunction clear(store = getDefaultStore()) {\r\n    return store._withIDBStore('readwrite', store => {\r\n        store.clear();\r\n    });\r\n}\r\nfunction keys(store = getDefaultStore()) {\r\n    const keys = [];\r\n    return store._withIDBStore('readwrite', store => {\r\n        // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\r\n        // And openKeyCursor isn't supported by Safari.\r\n        (store.openKeyCursor || store.openCursor).call(store).onsuccess = function () {\r\n            if (!this.result)\r\n                return;\r\n            keys.push(this.result.key);\r\n            this.result.continue();\r\n        };\r\n    }).then(() => keys);\r\n}\r\nfunction close(store = getDefaultStore()) {\r\n    return store._close();\r\n}\n\nexport { Store, get, set, update, del, clear, keys, close };\n","const idb = require(\"@isomorphic-git/idb-keyval\");\n\nmodule.exports = class IdbBackend {\n  constructor(dbname, storename) {\n    this._database = dbname;\n    this._storename = storename;\n    this._store = new idb.Store(this._database, this._storename);\n  }\n  saveSuperblock(superblock) {\n    return idb.set(\"!root\", superblock, this._store);\n  }\n  loadSuperblock() {\n    return idb.get(\"!root\", this._store);\n  }\n  readFile(inode) {\n    return idb.get(inode, this._store)\n  }\n  writeFile(inode, data) {\n    return idb.set(inode, data, this._store)\n  }\n  unlink(inode) {\n    return idb.del(inode, this._store)\n  }\n  wipe() {\n    return idb.clear(this._store)\n  }\n  close() {\n    return idb.close(this._store)\n  }\n}\n","module.exports = class HttpBackend {\n  constructor(url) {\n    this._url = url;\n  }\n  loadSuperblock() {\n    return fetch(this._url + '/.superblock.txt').then(res => res.ok ? res.text() : null)\n  }\n  async readFile(filepath) {\n    const res = await fetch(this._url + filepath)\n    if (res.status === 200) {\n      return res.arrayBuffer()\n    } else {\n      throw new Error('ENOENT')\n    }\n  }\n  async sizeFile(filepath) {\n    const res = await fetch(this._url + filepath, { method: 'HEAD' })\n    if (res.status === 200) {\n      return res.headers.get('content-length')\n    } else {\n      throw new Error('ENOENT')\n    }\n  }\n}\n","const idb = require(\"@isomorphic-git/idb-keyval\");\n\nconst sleep = ms => new Promise(r => setTimeout(r, ms))\n\nmodule.exports = class Mutex {\n  constructor(dbname, storename) {\n    this._id = Math.random()\n    this._database = dbname\n    this._storename = storename\n    this._store = new idb.Store(this._database, this._storename)\n    this._lock = null\n  }\n  async has ({ margin = 2000 } = {}) {\n    if (this._lock && this._lock.holder === this._id) {\n      const now = Date.now()\n      if (this._lock.expires > now + margin) {\n        return true\n      } else {\n        return await this.renew()\n      }\n    } else {\n      return false\n    }\n  }\n  // Returns true if successful\n  async renew ({ ttl = 5000 } = {}) {\n    let success\n    await idb.update(\"lock\", (current) => {\n      const now = Date.now()\n      const expires = now + ttl\n      success = current && current.holder === this._id\n      this._lock = success ? { holder: this._id, expires } : current\n      return this._lock\n    }, this._store)\n    return success\n  }\n  // Returns true if successful\n  async acquire ({ ttl = 5000 } = {}) {\n    let success\n    let expired\n    let doubleLock\n    await idb.update(\"lock\", (current) => {\n      const now = Date.now()\n      const expires = now + ttl\n      expired = current && current.expires < now\n      success = current === undefined || expired\n      doubleLock = current && current.holder === this._id\n      this._lock = success ? { holder: this._id, expires } : current\n      return this._lock\n    }, this._store)\n    if (doubleLock) {\n      throw new Error('Mutex double-locked')\n    }\n    return success\n  }\n  // check at 10Hz, give up after 10 minutes\n  async wait ({ interval = 100, limit = 6000, ttl } = {}) {\n    while (limit--) {\n      if (await this.acquire({ ttl })) return true\n      await sleep(interval)\n    }\n    throw new Error('Mutex timeout')\n  }\n  // Returns true if successful\n  async release ({ force = false } = {}) {\n    let success\n    let doubleFree\n    let someoneElseHasIt\n    await idb.update(\"lock\", (current) => {\n      success = force || (current && current.holder === this._id)\n      doubleFree = current === void 0\n      someoneElseHasIt = current && current.holder !== this._id\n      this._lock = success ? void 0 : current\n      return this._lock\n    }, this._store)\n    await idb.close(this._store)\n    if (!success && !force) {\n      if (doubleFree) throw new Error('Mutex double-freed')\n      if (someoneElseHasIt) throw new Error('Mutex lost ownership')\n    }\n    return success\n  }\n}\n","module.exports = class Mutex {\n  constructor(name) {\n    this._id = Math.random()\n    this._database = name\n    this._has = false\n    this._release = null\n  }\n  async has () {\n    return this._has\n  }\n  // Returns true if successful\n  async acquire () {\n    return new Promise(resolve => {\n      navigator.locks.request(this._database + \"_lock\", {ifAvailable: true}, lock => {\n        this._has = !!lock\n        resolve(!!lock)\n        return new Promise(resolve => {\n          this._release = resolve\n        })\n      }); \n    })\n  }\n  // Returns true if successful, gives up after 10 minutes\n  async wait ({ timeout = 600000 } = {}) {\n    return new Promise((resolve, reject) => {\n      const controller = new AbortController();\n      setTimeout(() => {\n        controller.abort();\n        reject(new Error('Mutex timeout'))\n      }, timeout);\n      navigator.locks.request(this._database + \"_lock\", {signal: controller.signal}, lock => {\n        this._has = !!lock\n        resolve(!!lock)\n        return new Promise(resolve => {\n          this._release = resolve\n        })\n      }); \n    })\n  }\n  // Returns true if successful\n  async release ({ force = false } = {}) {\n    this._has = false\n    if (this._release) {\n      this._release()\n    } else if (force) {\n      navigator.locks.request(this._database + \"_lock\", {steal: true}, lock => true)\n    }\n  }\n}\n","const { encode, decode } = require(\"isomorphic-textencoder\");\nconst debounce = require(\"just-debounce-it\");\n\nconst CacheFS = require(\"./CacheFS.js\");\nconst { ENOENT, ENOTEMPTY, ETIMEDOUT } = require(\"./errors.js\");\nconst IdbBackend = require(\"./IdbBackend.js\");\nconst HttpBackend = require(\"./HttpBackend.js\")\nconst Mutex = require(\"./Mutex.js\");\nconst Mutex2 = require(\"./Mutex2.js\");\n\nconst path = require(\"./path.js\");\n\nmodule.exports = class DefaultBackend {\n  constructor() {\n    this.saveSuperblock = debounce(() => {\n      this.flush();\n    }, 500);\n  }\n  async init (name, {\n    wipe,\n    url,\n    urlauto,\n    fileDbName = name,\n    db = null,\n    fileStoreName = name + \"_files\",\n    lockDbName = name + \"_lock\",\n    lockStoreName = name + \"_lock\",\n  } = {}) {\n    this._name = name\n    this._idb = db || new IdbBackend(fileDbName, fileStoreName);\n    this._mutex = navigator.locks ? new Mutex2(name) : new Mutex(lockDbName, lockStoreName);\n    this._cache = new CacheFS(name);\n    this._opts = { wipe, url };\n    this._needsWipe = !!wipe;\n    if (url) {\n      this._http = new HttpBackend(url)\n      this._urlauto = !!urlauto\n    }\n  }\n  async activate() {\n    if (this._cache.activated) return\n    // Wipe IDB if requested\n    if (this._needsWipe) {\n      this._needsWipe = false;\n      await this._idb.wipe()\n      await this._mutex.release({ force: true })\n    }\n    if (!(await this._mutex.has())) await this._mutex.wait()\n    // Attempt to load FS from IDB backend\n    const root = await this._idb.loadSuperblock()\n    if (root) {\n      this._cache.activate(root);\n    } else if (this._http) {\n      // If that failed, attempt to load FS from HTTP backend\n      const text = await this._http.loadSuperblock()\n      this._cache.activate(text)\n      await this._saveSuperblock();\n    } else {\n      // If there is no HTTP backend, start with an empty filesystem\n      this._cache.activate()\n    }\n    if (await this._mutex.has()) {\n      return\n    } else {\n      throw new ETIMEDOUT()\n    }\n  }\n  async deactivate() {\n    if (await this._mutex.has()) {\n      await this._saveSuperblock()\n    }\n    this._cache.deactivate()\n    try {\n      await this._mutex.release()\n    } catch (e) {\n      console.log(e)\n    }\n    await this._idb.close()\n  }\n  async _saveSuperblock() {\n    if (this._cache.activated) {\n      this._lastSavedAt = Date.now()\n      await this._idb.saveSuperblock(this._cache._root);\n    }\n  }\n  _writeStat(filepath, size, opts) {\n    let dirparts = path.split(path.dirname(filepath))\n    let dir = dirparts.shift()\n    for (let dirpart of dirparts) {\n      dir = path.join(dir, dirpart)\n      try {\n        this._cache.mkdir(dir, { mode: 0o777 })\n      } catch (e) {}\n    }\n    return this._cache.writeStat(filepath, size, opts)\n  }\n  async readFile(filepath, opts) {\n    const { encoding } = opts;\n    if (encoding && encoding !== 'utf8') throw new Error('Only \"utf8\" encoding is supported in readFile');\n    let data = null, stat = null\n    try {\n      stat = this._cache.stat(filepath);\n      data = await this._idb.readFile(stat.ino)\n    } catch (e) {\n      if (!this._urlauto) throw e\n    }\n    if (!data && this._http) {\n      let lstat = this._cache.lstat(filepath)\n      while (lstat.type === 'symlink') {\n        filepath = path.resolve(path.dirname(filepath), lstat.target)\n        lstat = this._cache.lstat(filepath)\n      }\n      data = await this._http.readFile(filepath)\n    }\n    if (data) {\n      if (!stat || stat.size != data.byteLength) {\n        stat = await this._writeStat(filepath, data.byteLength, { mode: stat ? stat.mode : 0o666 })\n        this.saveSuperblock() // debounced\n      }\n      if (encoding === \"utf8\") {\n        data = decode(data);\n      } else {\n        data.toString = () => decode(data);\n      }\n    }\n    if (!stat) throw new ENOENT(filepath)\n    return data;\n  }\n  async writeFile(filepath, data, opts) {\n    const { mode, encoding = \"utf8\" } = opts;\n    if (typeof data === \"string\") {\n      if (encoding !== \"utf8\") {\n        throw new Error('Only \"utf8\" encoding is supported in writeFile');\n      }\n      data = encode(data);\n    }\n    const stat = await this._cache.writeStat(filepath, data.byteLength, { mode });\n    await this._idb.writeFile(stat.ino, data)\n  }\n  async unlink(filepath, opts) {\n    const stat = this._cache.lstat(filepath);\n    this._cache.unlink(filepath);\n    if (stat.type !== 'symlink') {\n      await this._idb.unlink(stat.ino)\n    }\n  }\n  readdir(filepath, opts) {\n    return this._cache.readdir(filepath);\n  }\n  mkdir(filepath, opts) {\n    const { mode = 0o777 } = opts;\n    this._cache.mkdir(filepath, { mode });\n  }\n  rmdir(filepath, opts) {\n    // Never allow deleting the root directory.\n    if (filepath === \"/\") {\n      throw new ENOTEMPTY();\n    }\n    this._cache.rmdir(filepath);\n  }\n  rename(oldFilepath, newFilepath) {\n    this._cache.rename(oldFilepath, newFilepath);\n  }\n  stat(filepath, opts) {\n    return this._cache.stat(filepath);\n  }\n  lstat(filepath, opts) {\n    return this._cache.lstat(filepath);\n  }\n  readlink(filepath, opts) {\n    return this._cache.readlink(filepath);\n  }\n  symlink(target, filepath) {\n    this._cache.symlink(target, filepath);\n  }\n  async backFile(filepath, opts) {\n    let size = await this._http.sizeFile(filepath)\n    await this._writeStat(filepath, size, opts)\n  }\n  du(filepath) {\n    return this._cache.du(filepath);\n  }\n  flush() {\n    return this._saveSuperblock();\n  }\n}\n","module.exports = class Stat {\n  constructor(stats) {\n    this.type = stats.type;\n    this.mode = stats.mode;\n    this.size = stats.size;\n    this.ino = stats.ino;\n    this.mtimeMs = stats.mtimeMs;\n    this.ctimeMs = stats.ctimeMs || stats.mtimeMs;\n    this.uid = 1;\n    this.gid = 1;\n    this.dev = 1;\n  }\n  isFile() {\n    return this.type === \"file\";\n  }\n  isDirectory() {\n    return this.type === \"dir\";\n  }\n  isSymbolicLink() {\n    return this.type === \"symlink\";\n  }\n};\n","const DefaultBackend = require(\"./DefaultBackend.js\");\nconst Stat = require(\"./Stat.js\");\n\nconst path = require(\"./path.js\");\n\nfunction cleanParamsFilepathOpts(filepath, opts, ...rest) {\n  // normalize paths\n  filepath = path.normalize(filepath);\n  // strip out callbacks\n  if (typeof opts === \"undefined\" || typeof opts === \"function\") {\n    opts = {};\n  }\n  // expand string options to encoding options\n  if (typeof opts === \"string\") {\n    opts = {\n      encoding: opts,\n    };\n  }\n  return [filepath, opts, ...rest];\n}\n\nfunction cleanParamsFilepathDataOpts(filepath, data, opts, ...rest) {\n  // normalize paths\n  filepath = path.normalize(filepath);\n  // strip out callbacks\n  if (typeof opts === \"undefined\" || typeof opts === \"function\") {\n    opts = {};\n  }\n  // expand string options to encoding options\n  if (typeof opts === \"string\") {\n    opts = {\n      encoding: opts,\n    };\n  }\n  return [filepath, data, opts, ...rest];\n}\n\nfunction cleanParamsFilepathFilepath(oldFilepath, newFilepath, ...rest) {\n  // normalize paths\n  return [path.normalize(oldFilepath), path.normalize(newFilepath), ...rest];\n}\n\nmodule.exports = class PromisifiedFS {\n  constructor(name, options = {}) {\n    this.init = this.init.bind(this)\n    this.readFile = this._wrap(this.readFile, cleanParamsFilepathOpts, false)\n    this.writeFile = this._wrap(this.writeFile, cleanParamsFilepathDataOpts, true)\n    this.unlink = this._wrap(this.unlink, cleanParamsFilepathOpts, true)\n    this.readdir = this._wrap(this.readdir, cleanParamsFilepathOpts, false)\n    this.mkdir = this._wrap(this.mkdir, cleanParamsFilepathOpts, true)\n    this.rmdir = this._wrap(this.rmdir, cleanParamsFilepathOpts, true)\n    this.rename = this._wrap(this.rename, cleanParamsFilepathFilepath, true)\n    this.stat = this._wrap(this.stat, cleanParamsFilepathOpts, false)\n    this.lstat = this._wrap(this.lstat, cleanParamsFilepathOpts, false)\n    this.readlink = this._wrap(this.readlink, cleanParamsFilepathOpts, false)\n    this.symlink = this._wrap(this.symlink, cleanParamsFilepathFilepath, true)\n    this.backFile = this._wrap(this.backFile, cleanParamsFilepathOpts, true)\n    this.du = this._wrap(this.du, cleanParamsFilepathOpts, false);\n\n    this._deactivationPromise = null\n    this._deactivationTimeout = null\n    this._activationPromise = null\n\n    this._operations = new Set()\n\n    if (name) {\n      this.init(name, options)\n    }\n  }\n  async init (...args) {\n    if (this._initPromiseResolve) await this._initPromise;\n    this._initPromise = this._init(...args)\n    return this._initPromise\n  }\n  async _init (name, options = {}) {\n    await this._gracefulShutdown();\n    if (this._activationPromise) await this._deactivate()\n\n    if (this._backend && this._backend.destroy) {\n      await this._backend.destroy();\n    }\n    this._backend = options.backend || new DefaultBackend();\n    if (this._backend.init) {\n      await this._backend.init(name, options);\n    }\n\n    if (this._initPromiseResolve) {\n      this._initPromiseResolve();\n      this._initPromiseResolve = null;\n    }\n    // The next comment starting with the \"fs is initially activated when constructed\"?\n    // That can create contention for the mutex if two threads try to init at the same time\n    // so I've added an option to disable that behavior.\n    if (!options.defer) {\n      // The fs is initially activated when constructed (in order to wipe/save the superblock)\n      // This is not awaited, because that would create a cycle.\n      this.stat('/')\n    }\n  }\n  async _gracefulShutdown () {\n    if (this._operations.size > 0) {\n      this._isShuttingDown = true\n      await new Promise(resolve => this._gracefulShutdownResolve = resolve);\n      this._isShuttingDown = false\n      this._gracefulShutdownResolve = null\n    }\n  }\n  _wrap (fn, paramCleaner, mutating) {\n    return async (...args) => {\n      args = paramCleaner(...args)\n      let op = {\n        name: fn.name,\n        args,\n      }\n      this._operations.add(op)\n      try {\n        await this._activate()\n        return await fn.apply(this, args)\n      } finally {\n        this._operations.delete(op)\n        if (mutating) this._backend.saveSuperblock() // this is debounced\n        if (this._operations.size === 0) {\n          if (!this._deactivationTimeout) clearTimeout(this._deactivationTimeout)\n          this._deactivationTimeout = setTimeout(this._deactivate.bind(this), 500)\n        }\n      }\n    }\n  }\n  async _activate() {\n    if (!this._initPromise) console.warn(new Error(`Attempted to use LightningFS ${this._name} before it was initialized.`))\n    await this._initPromise\n    if (this._deactivationTimeout) {\n      clearTimeout(this._deactivationTimeout)\n      this._deactivationTimeout = null\n    }\n    if (this._deactivationPromise) await this._deactivationPromise\n    this._deactivationPromise = null\n    if (!this._activationPromise) {\n      this._activationPromise = this._backend.activate ? this._backend.activate() : Promise.resolve();\n    }\n    await this._activationPromise\n  }\n  async _deactivate() {\n    if (this._activationPromise) await this._activationPromise\n\n    if (!this._deactivationPromise) {\n      this._deactivationPromise = this._backend.deactivate ? this._backend.deactivate() : Promise.resolve();\n    }\n    this._activationPromise = null\n    if (this._gracefulShutdownResolve) this._gracefulShutdownResolve()\n    return this._deactivationPromise\n  }\n  async readFile(filepath, opts) {\n    return this._backend.readFile(filepath, opts);\n  }\n  async writeFile(filepath, data, opts) {\n    await this._backend.writeFile(filepath, data, opts);\n    return null\n  }\n  async unlink(filepath, opts) {\n    await this._backend.unlink(filepath, opts);\n    return null\n  }\n  async readdir(filepath, opts) {\n    return this._backend.readdir(filepath, opts);\n  }\n  async mkdir(filepath, opts) {\n    await this._backend.mkdir(filepath, opts);\n    return null\n  }\n  async rmdir(filepath, opts) {\n    await this._backend.rmdir(filepath, opts);\n    return null;\n  }\n  async rename(oldFilepath, newFilepath) {\n    await this._backend.rename(oldFilepath, newFilepath);\n    return null;\n  }\n  async stat(filepath, opts) {\n    const data = await this._backend.stat(filepath, opts);\n    return new Stat(data);\n  }\n  async lstat(filepath, opts) {\n    const data = await this._backend.lstat(filepath, opts);\n    return new Stat(data);\n  }\n  async readlink(filepath, opts) {\n    return this._backend.readlink(filepath, opts);\n  }\n  async symlink(target, filepath) {\n    await this._backend.symlink(target, filepath);\n    return null;\n  }\n  async backFile(filepath, opts) {\n    await this._backend.backFile(filepath, opts);\n    return null\n  }\n  async du(filepath) {\n    return this._backend.du(filepath);\n  }\n  async flush() {\n    return this._backend.flush();\n  }\n}\n","const once = require(\"just-once\");\n\nconst PromisifiedFS = require('./PromisifiedFS');\n\nfunction wrapCallback (opts, cb) {\n  if (typeof opts === \"function\") {\n    cb = opts;\n  }\n  cb = once(cb);\n  const resolve = (...args) => cb(null, ...args)\n  return [resolve, cb];\n}\n\nmodule.exports = class FS {\n  constructor(...args) {\n    this.promises = new PromisifiedFS(...args)\n    // Needed so things don't break if you destructure fs and pass individual functions around\n    this.init = this.init.bind(this)\n    this.readFile = this.readFile.bind(this)\n    this.writeFile = this.writeFile.bind(this)\n    this.unlink = this.unlink.bind(this)\n    this.readdir = this.readdir.bind(this)\n    this.mkdir = this.mkdir.bind(this)\n    this.rmdir = this.rmdir.bind(this)\n    this.rename = this.rename.bind(this)\n    this.stat = this.stat.bind(this)\n    this.lstat = this.lstat.bind(this)\n    this.readlink = this.readlink.bind(this)\n    this.symlink = this.symlink.bind(this)\n    this.backFile = this.backFile.bind(this)\n    this.du = this.du.bind(this)\n    this.flush = this.flush.bind(this)\n  }\n  init(name, options) {\n    return this.promises.init(name, options)\n  }\n  readFile(filepath, opts, cb) {\n    const [resolve, reject] = wrapCallback(opts, cb);\n    this.promises.readFile(filepath, opts).then(resolve).catch(reject)\n  }\n  writeFile(filepath, data, opts, cb) {\n    const [resolve, reject] = wrapCallback(opts, cb);\n    this.promises.writeFile(filepath, data, opts).then(resolve).catch(reject);\n  }\n  unlink(filepath, opts, cb) {\n    const [resolve, reject] = wrapCallback(opts, cb);\n    this.promises.unlink(filepath, opts).then(resolve).catch(reject);\n  }\n  readdir(filepath, opts, cb) {\n    const [resolve, reject] = wrapCallback(opts, cb);\n    this.promises.readdir(filepath, opts).then(resolve).catch(reject);\n  }\n  mkdir(filepath, opts, cb) {\n    const [resolve, reject] = wrapCallback(opts, cb);\n    this.promises.mkdir(filepath, opts).then(resolve).catch(reject)\n  }\n  rmdir(filepath, opts, cb) {\n    const [resolve, reject] = wrapCallback(opts, cb);\n    this.promises.rmdir(filepath, opts).then(resolve).catch(reject)\n  }\n  rename(oldFilepath, newFilepath, cb) {\n    const [resolve, reject] = wrapCallback(cb);\n    this.promises.rename(oldFilepath, newFilepath).then(resolve).catch(reject)\n  }\n  stat(filepath, opts, cb) {\n    const [resolve, reject] = wrapCallback(opts, cb);\n    this.promises.stat(filepath).then(resolve).catch(reject);\n  }\n  lstat(filepath, opts, cb) {\n    const [resolve, reject] = wrapCallback(opts, cb);\n    this.promises.lstat(filepath).then(resolve).catch(reject);\n  }\n  readlink(filepath, opts, cb) {\n    const [resolve, reject] = wrapCallback(opts, cb);\n    this.promises.readlink(filepath).then(resolve).catch(reject);\n  }\n  symlink(target, filepath, cb) {\n    const [resolve, reject] = wrapCallback(cb);\n    this.promises.symlink(target, filepath).then(resolve).catch(reject);\n  }\n  backFile(filepath, opts, cb) {\n    const [resolve, reject] = wrapCallback(opts, cb);\n    this.promises.backFile(filepath, opts).then(resolve).catch(reject);\n  }\n  du(filepath, cb) {\n    const [resolve, reject] = wrapCallback(cb);\n    this.promises.du(filepath).then(resolve).catch(reject);\n  }\n  flush(cb) {\n    const [resolve, reject] = wrapCallback(cb);\n    this.promises.flush().then(resolve).catch(reject);\n  }\n}\n"],"names":["justOnce","once","fn","called","value","buffer","base64Js","byteLength","toByteArray","fromByteArray","lookup","revLookup","Arr","code","i","len","getLens","b64","validLen","placeHoldersLen","lens","_byteLength","tmp","arr","curByte","tripletToBase64","num","encodeChunk","uint8","start","end","output","extraBytes","parts","maxChunkLength","len2","ieee754","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","d","s","c","rt","exports","base64","ieee754$1","customInspectSymbol","Buffer","SlowBuffer","K_MAX_LENGTH","GlobalUint8Array","GlobalArrayBuffer","GlobalSharedArrayBuffer","typedArraySupport","proto","createBuffer","length","buf","arg","encodingOrOffset","allocUnsafe","from","fromString","fromArrayView","isInstance","fromArrayBuffer","valueOf","b","fromObject","assertSize","size","alloc","fill","encoding","checked","string","actual","fromArrayLike","array","arrayView","copy","byteOffset","obj","numberIsNaN","a","x","y","list","pos","mustMatch","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","str","max","target","thisStart","thisEnd","thisCopy","targetCopy","bidirectionalIndexOf","val","dir","arrayIndexOf","indexSize","arrLength","valLength","read","foundIndex","found","j","hexWrite","remaining","strLen","parsed","utf8Write","blitBuffer","asciiWrite","asciiToBytes","base64Write","ucs2Write","utf16leToBytes","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","MAX_ARGUMENTS_LENGTH","codePoints","ret","out","hexSliceLookupTable","bytes","newBuf","checkOffset","ext","noAssert","mul","defineBigIntMethod","validateNumber","first","last","boundsError","lo","hi","checkInt","min","maxBytes","wrtBigUInt64LE","checkIntBI","wrtBigUInt64BE","limit","sub","checkIEEE754","writeFloat","littleEndian","writeDouble","targetStart","errors","E","sym","getMessage","Base","name","range","input","msg","received","addNumericalSeparator","checkBounds","type","INVALID_BASE64_RE","base64clean","units","leadSurrogate","byteArray","src","dst","alphabet","table","i16","BufferBigIntNotDefined","scope","B","r","f","w","h","o","t","l","R","F","u","p","A","v","U","O","S","T","g","this","require$$0","browser","justDebounceIt","debounce","wait","callFirst","timeout","context","args","callNow","normalizePath","path","splitPath","reducer","joinPath","resolvePath","paths","result","dirname","basename","ancestors","current","Err","EEXIST","ENOENT","ENOTDIR","ENOTEMPTY","ETIMEDOUT","require$$1","STAT","CacheFS_1","root","superblock","map","count","key","printTree","indent","file","node","stat","mode","print","autoinc","mk","ino","mtimeMs","lines","_root","stack","line","filename","filepath","follow","partialPath","part","entry","parent","oldStat","oldFilepath","newFilepath","Store","dbName","storeName","resolve","reject","openreq","callback","db","transaction","store","getDefaultStore","get","req","set","update","updater","del","clear","keys","close","idb","IdbBackend_1","dbname","storename","inode","data","HttpBackend_1","url","sleep","ms","Mutex_1","margin","now","ttl","success","expires","expired","doubleLock","interval","force","doubleFree","someoneElseHasIt","Mutex2","lock","controller","encode","decode","CacheFS","require$$2","require$$3","IdbBackend","require$$4","HttpBackend","require$$5","Mutex","require$$6","require$$7","require$$8","DefaultBackend_1","wipe","urlauto","fileDbName","fileStoreName","lockDbName","lockStoreName","text","opts","dirparts","dirpart","lstat","Stat_1","stats","DefaultBackend","Stat","cleanParamsFilepathOpts","rest","cleanParamsFilepathDataOpts","cleanParamsFilepathFilepath","PromisifiedFS_1","options","paramCleaner","mutating","op","PromisifiedFS","wrapCallback","cb"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]}